(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0b6737"],{"1ce4":function(t,n){t.exports={body:"Reflow\n======\n\n```js\nconst interactable = interact(target)\nconst drag = { name: drag, axis: 'x' }\nconst resize = {\n  name: resize,\n  edges: { left: true, bottom: true }\n}\n\ninteractable.reflow(drag)\ninteractable.reflow(resize)\n```\n\nThe reflow method lets you trigger an action start -> move -> end sequence which\nruns modifiers and does drop calculations, etc. If your interactable target is a\nCSS selector, an interaction will be run for each matching element. If the\nelements have inertia, `endOnly` modifiers and `smoothEndDuration`, then the\ninteractions may be run asyncroously. The reflow method returns a `Promise`\nwhich is resolved when all interactions are complete.\n",html:'<h1 id="reflow" class="title is-2"><a class="header-anchor" href="#reflow" aria-hidden="true"></a> Reflow</h1>\n<pre><code class="language-js"><span class="token keyword">const</span> interactable <span class="token operator">=</span> <span class="token function">interact</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span>\n<span class="token keyword">const</span> drag <span class="token operator">=</span> <span class="token punctuation">{</span> name<span class="token punctuation">:</span> drag<span class="token punctuation">,</span> axis<span class="token punctuation">:</span> <span class="token string">\'x\'</span> <span class="token punctuation">}</span>\n<span class="token keyword">const</span> resize <span class="token operator">=</span> <span class="token punctuation">{</span>\n  name<span class="token punctuation">:</span> resize<span class="token punctuation">,</span>\n  edges<span class="token punctuation">:</span> <span class="token punctuation">{</span> left<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> bottom<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\ninteractable<span class="token punctuation">.</span><span class="token function">reflow</span><span class="token punctuation">(</span>drag<span class="token punctuation">)</span>\ninteractable<span class="token punctuation">.</span><span class="token function">reflow</span><span class="token punctuation">(</span>resize<span class="token punctuation">)</span>\n</code></pre>\n<p>The reflow method lets you trigger an action start -&gt; move -&gt; end sequence which\nruns modifiers and does drop calculations, etc. If your interactable target is a\nCSS selector, an interaction will be run for each matching element. If the\nelements have inertia, <code>endOnly</code> modifiers and <code>smoothEndDuration</code>, then the\ninteractions may be run asyncroously. The reflow method returns a <code>Promise</code>\nwhich is resolved when all interactions are complete.</p>\n',attributes:{},vue:{render:"return function render() { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0) }",staticRenderFns:'return [function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'div\',{staticClass:"frontmatter-markdown"},[_c(\'h1\',{staticClass:"title is-2",attrs:{"id":"reflow"}},[_c(\'a\',{staticClass:"header-anchor",attrs:{"href":"#reflow","aria-hidden":"true"}}),_vm._v(" Reflow")]),_vm._v(" "),_c(\'pre\',[_c(\'code\',{staticClass:"language-js"},[_c(\'span\',{staticClass:"token keyword"},[_vm._v("const")]),_vm._v(" interactable "),_c(\'span\',{staticClass:"token operator"},[_vm._v("=")]),_vm._v(" "),_c(\'span\',{staticClass:"token function"},[_vm._v("interact")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("(")]),_vm._v("target"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(")")]),_vm._v("\\n"),_c(\'span\',{staticClass:"token keyword"},[_vm._v("const")]),_vm._v(" drag "),_c(\'span\',{staticClass:"token operator"},[_vm._v("=")]),_vm._v(" "),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("{")]),_vm._v(" name"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(":")]),_vm._v(" drag"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(",")]),_vm._v(" axis"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(":")]),_vm._v(" "),_c(\'span\',{staticClass:"token string"},[_vm._v("\'x\'")]),_vm._v(" "),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("}")]),_vm._v("\\n"),_c(\'span\',{staticClass:"token keyword"},[_vm._v("const")]),_vm._v(" resize "),_c(\'span\',{staticClass:"token operator"},[_vm._v("=")]),_vm._v(" "),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("{")]),_vm._v("\\n  name"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(":")]),_vm._v(" resize"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(",")]),_vm._v("\\n  edges"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(":")]),_vm._v(" "),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("{")]),_vm._v(" left"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(":")]),_vm._v(" "),_c(\'span\',{staticClass:"token boolean"},[_vm._v("true")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(",")]),_vm._v(" bottom"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(":")]),_vm._v(" "),_c(\'span\',{staticClass:"token boolean"},[_vm._v("true")]),_vm._v(" "),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("}")]),_vm._v("\\n"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("}")]),_vm._v("\\n\\ninteractable"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(".")]),_c(\'span\',{staticClass:"token function"},[_vm._v("reflow")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("(")]),_vm._v("drag"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(")")]),_vm._v("\\ninteractable"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(".")]),_c(\'span\',{staticClass:"token function"},[_vm._v("reflow")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("(")]),_vm._v("resize"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(")")]),_vm._v("\\n")])]),_vm._v(" "),_c(\'p\',[_vm._v("The reflow method lets you trigger an action start -> move -> end sequence which\\nruns modifiers and does drop calculations, etc. If your interactable target is a\\nCSS selector, an interaction will be run for each matching element. If the\\nelements have inertia, "),_c(\'code\',{pre:true},[_vm._v("endOnly")]),_vm._v(" modifiers and "),_c(\'code\',{pre:true},[_vm._v("smoothEndDuration")]),_vm._v(", then the\\ninteractions may be run asyncroously. The reflow method returns a "),_c(\'code\',{pre:true},[_vm._v("Promise")]),_vm._v("\\nwhich is resolved when all interactions are complete.")])]) }]',component:{data:function(){return{templateRender:null}},render:function(t){return this.templateRender?this.templateRender():t("div","Rendering")},created:function(){this.templateRender=function(){var t=this,n=t.$createElement;t._self._c;return t._m(0)},this.$options.staticRenderFns=[function(){var t=this,n=t.$createElement,a=t._self._c||n;return a("div",{staticClass:"frontmatter-markdown"},[a("h1",{staticClass:"title is-2",attrs:{id:"reflow"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#reflow","aria-hidden":"true"}}),t._v(" Reflow")]),t._v(" "),a("pre",[a("code",{staticClass:"language-js"},[a("span",{staticClass:"token keyword"},[t._v("const")]),t._v(" interactable "),a("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),a("span",{staticClass:"token function"},[t._v("interact")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("target"),a("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n"),a("span",{staticClass:"token keyword"},[t._v("const")]),t._v(" drag "),a("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),a("span",{staticClass:"token punctuation"},[t._v("{")]),t._v(" name"),a("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" drag"),a("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" axis"),a("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),a("span",{staticClass:"token string"},[t._v("'x'")]),t._v(" "),a("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n"),a("span",{staticClass:"token keyword"},[t._v("const")]),t._v(" resize "),a("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),a("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n  name"),a("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" resize"),a("span",{staticClass:"token punctuation"},[t._v(",")]),t._v("\n  edges"),a("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),a("span",{staticClass:"token punctuation"},[t._v("{")]),t._v(" left"),a("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),a("span",{staticClass:"token boolean"},[t._v("true")]),a("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" bottom"),a("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),a("span",{staticClass:"token boolean"},[t._v("true")]),t._v(" "),a("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n"),a("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n\ninteractable"),a("span",{staticClass:"token punctuation"},[t._v(".")]),a("span",{staticClass:"token function"},[t._v("reflow")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("drag"),a("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\ninteractable"),a("span",{staticClass:"token punctuation"},[t._v(".")]),a("span",{staticClass:"token function"},[t._v("reflow")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("resize"),a("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n")])]),t._v(" "),a("p",[t._v("The reflow method lets you trigger an action start -> move -> end sequence which\nruns modifiers and does drop calculations, etc. If your interactable target is a\nCSS selector, an interaction will be run for each matching element. If the\nelements have inertia, "),a("code",{pre:!0},[t._v("endOnly")]),t._v(" modifiers and "),a("code",{pre:!0},[t._v("smoothEndDuration")]),t._v(", then the\ninteractions may be run asyncroously. The reflow method returns a "),a("code",{pre:!0},[t._v("Promise")]),t._v("\nwhich is resolved when all interactions are complete.")])])}]}}}}}}]);
//# sourceMappingURL=chunk-2d0b6737.cb8b577b.js.map