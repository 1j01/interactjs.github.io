(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d221bb3"],{cc30:function(t,n){t.exports={body:"Dropzone\n========\n\nDropzones define elements that draggable targets can be \"dropped\" into and which\nelements will be accepted. Like with drag events, drop events don't modify the\nDOM to re-parent elements. You will have to do this in your own event listeners\nif you need this.\n\n```javascript\ninteract(dropTarget)\n  .dropzone({\n    ondrop: function (event) {\n      alert(event.relatedTarget.id\n            + ' was dropped into '\n            + event.target.id)\n    }\n  })\n  .on('dropactivate', function (event) {\n    event.target.classList.add('drop-activated')\n  })\n```\n\nDropzone Events\n---------------\n\nDropzone events are plain objects with the following properties:\n\n| Property                | Description                                       |\n| ----------------------- | --------------------------------------------------|\n| `target`                | The dropzone element                              |\n| `dropzone`              | The dropzone Interactable                         |\n| `relatedTarget`         | The element that's being dragged                  |\n| `draggable`             | The Interactable that's being dragged             |\n| `dragEvent`             | The related drag event – drag{start,move,end}     |\n| `timeStamp`             | Time of the event                                 |\n| `type`                  | The event type                                    |\n\n```javascript\ninteract('.dropzone').dropzone({\n  accept: '.drag0, .drag1',\n});\n```\n\n`accept`\n--------\n\nThe dropzone `accept` option is a CSS selector or element which must match the\ndragged element in order for drop events to be fired.\n\n```javascript\ninteract(target).dropzone({\n  overlap: 0.25\n});\n```\n\nThe `overlap` option sets how drops are checked for. The allowed values are:\n\n - `'pointer'` – the pointer must be over the dropzone (default)\n - `'center'` – the draggable element's center must be over the dropzone\n - a number from 0-1 which is the (intersection area) / (draggable area).  e.g.\n `0.5` for drop to happen when half of the area of the draggable is over the\n dropzone\n\n`checker`\n---------\n\nThe `checker` option is a function that you set to additionally check if a\ndragged element can be dropped into a dropzone.\n\n```javascript\ninteract(target).dropzone({\n  checker: function (dragEvent,         // related dragmove or dragend\n                     event,             // Touch, Pointer or Mouse Event\n                     dropped,           // bool default checker result\n                     dropzone,          // dropzone Interactable\n                     dropElement,       // dropzone elemnt\n                     draggable,         // draggable Interactable\n                     draggableElement) {// draggable element\n\n    // only allow drops into empty dropzone elements\n    return dropped && !dropElement.hasChildNodes();\n  }\n});\n ```\n\nThe checker function takes the following arguments:\n\n| Arg                     | Description                                       |\n| ----------------------- | --------------------------------------------------|\n| `dragEvent`             | related dragmove or dragend event                 |\n| `event`                 | The user move/up/end Event related to the dragEvent\n| `dropped`               | The value from the default drop checker           |\n| `dropzone`              | The dropzone interactable                         |\n| `dropElement`           | The dropzone element                              |\n| `draggable`             | The Interactable being dragged                    |\n| `draggableElement`      | The actual element that's being dragged           |\n",html:'<h1 id="dropzone" class="title is-2"><a class="header-anchor" href="#dropzone" aria-hidden="true"></a> Dropzone</h1>\n<p>Dropzones define elements that draggable targets can be &quot;dropped&quot; into and which\nelements will be accepted. Like with drag events, drop events don\'t modify the\nDOM to re-parent elements. You will have to do this in your own event listeners\nif you need this.</p>\n<pre><code class="language-javascript"><span class="token function">interact</span><span class="token punctuation">(</span>dropTarget<span class="token punctuation">)</span>\n  <span class="token punctuation">.</span><span class="token function">dropzone</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    <span class="token function-variable function">ondrop</span><span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token function">alert</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>relatedTarget<span class="token punctuation">.</span>id\n            <span class="token operator">+</span> <span class="token string">\' was dropped into \'</span>\n            <span class="token operator">+</span> event<span class="token punctuation">.</span>target<span class="token punctuation">.</span>id<span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">\'dropactivate\'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    event<span class="token punctuation">.</span>target<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">\'drop-activated\'</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre>\n<h2 id="dropzone-events" class="title is-3"><a class="header-anchor" href="#dropzone-events" aria-hidden="true"></a> Dropzone Events</h2>\n<p>Dropzone events are plain objects with the following properties:</p>\n<table class="table is-bordered">\n<thead>\n<tr>\n<th>Property</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>target</code></td>\n<td>The dropzone element</td>\n</tr>\n<tr>\n<td><code>dropzone</code></td>\n<td>The dropzone Interactable</td>\n</tr>\n<tr>\n<td><code>relatedTarget</code></td>\n<td>The element that\'s being dragged</td>\n</tr>\n<tr>\n<td><code>draggable</code></td>\n<td>The Interactable that\'s being dragged</td>\n</tr>\n<tr>\n<td><code>dragEvent</code></td>\n<td>The related drag event – drag{start,move,end}</td>\n</tr>\n<tr>\n<td><code>timeStamp</code></td>\n<td>Time of the event</td>\n</tr>\n<tr>\n<td><code>type</code></td>\n<td>The event type</td>\n</tr>\n</tbody>\n</table>\n<pre><code class="language-javascript"><span class="token function">interact</span><span class="token punctuation">(</span><span class="token string">\'.dropzone\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">dropzone</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  accept<span class="token punctuation">:</span> <span class="token string">\'.drag0, .drag1\'</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre>\n<h2 id="accept" class="title is-3"><a class="header-anchor" href="#accept" aria-hidden="true"></a> <code>accept</code></h2>\n<p>The dropzone <code>accept</code> option is a CSS selector or element which must match the\ndragged element in order for drop events to be fired.</p>\n<pre><code class="language-javascript"><span class="token function">interact</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">dropzone</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  overlap<span class="token punctuation">:</span> <span class="token number">0.25</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre>\n<p>The <code>overlap</code> option sets how drops are checked for. The allowed values are:</p>\n<ul>\n<li><code>\'pointer\'</code> – the pointer must be over the dropzone (default)</li>\n<li><code>\'center\'</code> – the draggable element\'s center must be over the dropzone</li>\n<li>a number from 0-1 which is the (intersection area) / (draggable area).  e.g.\n<code>0.5</code> for drop to happen when half of the area of the draggable is over the\ndropzone</li>\n</ul>\n<h2 id="checker" class="title is-3"><a class="header-anchor" href="#checker" aria-hidden="true"></a> <code>checker</code></h2>\n<p>The <code>checker</code> option is a function that you set to additionally check if a\ndragged element can be dropped into a dropzone.</p>\n<pre><code class="language-javascript"><span class="token function">interact</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">dropzone</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token function-variable function">checker</span><span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>dragEvent<span class="token punctuation">,</span>         <span class="token comment">// related dragmove or dragend</span>\n                     event<span class="token punctuation">,</span>             <span class="token comment">// Touch, Pointer or Mouse Event</span>\n                     dropped<span class="token punctuation">,</span>           <span class="token comment">// bool default checker result</span>\n                     dropzone<span class="token punctuation">,</span>          <span class="token comment">// dropzone Interactable</span>\n                     dropElement<span class="token punctuation">,</span>       <span class="token comment">// dropzone elemnt</span>\n                     draggable<span class="token punctuation">,</span>         <span class="token comment">// draggable Interactable</span>\n                     draggableElement<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">// draggable element</span>\n\n    <span class="token comment">// only allow drops into empty dropzone elements</span>\n    <span class="token keyword">return</span> dropped <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>dropElement<span class="token punctuation">.</span><span class="token function">hasChildNodes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre>\n<p>The checker function takes the following arguments:</p>\n<table class="table is-bordered">\n<thead>\n<tr>\n<th>Arg</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>dragEvent</code></td>\n<td>related dragmove or dragend event</td>\n</tr>\n<tr>\n<td><code>event</code></td>\n<td>The user move/up/end Event related to the dragEvent</td>\n</tr>\n<tr>\n<td><code>dropped</code></td>\n<td>The value from the default drop checker</td>\n</tr>\n<tr>\n<td><code>dropzone</code></td>\n<td>The dropzone interactable</td>\n</tr>\n<tr>\n<td><code>dropElement</code></td>\n<td>The dropzone element</td>\n</tr>\n<tr>\n<td><code>draggable</code></td>\n<td>The Interactable being dragged</td>\n</tr>\n<tr>\n<td><code>draggableElement</code></td>\n<td>The actual element that\'s being dragged</td>\n</tr>\n</tbody>\n</table>\n',attributes:{},vue:{render:"return function render() { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0) }",staticRenderFns:'return [function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'div\',{staticClass:"frontmatter-markdown"},[_c(\'h1\',{staticClass:"title is-2",attrs:{"id":"dropzone"}},[_c(\'a\',{staticClass:"header-anchor",attrs:{"href":"#dropzone","aria-hidden":"true"}}),_vm._v(" Dropzone")]),_vm._v(" "),_c(\'p\',[_vm._v("Dropzones define elements that draggable targets can be \\"dropped\\" into and which\\nelements will be accepted. Like with drag events, drop events don\'t modify the\\nDOM to re-parent elements. You will have to do this in your own event listeners\\nif you need this.")]),_vm._v(" "),_c(\'pre\',[_c(\'code\',{staticClass:"language-javascript"},[_c(\'span\',{staticClass:"token function"},[_vm._v("interact")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("(")]),_vm._v("dropTarget"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(")")]),_vm._v("\\n  "),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(".")]),_c(\'span\',{staticClass:"token function"},[_vm._v("dropzone")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("(")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("{")]),_vm._v("\\n    "),_c(\'span\',{staticClass:"token function-variable function"},[_vm._v("ondrop")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(":")]),_vm._v(" "),_c(\'span\',{staticClass:"token keyword"},[_vm._v("function")]),_vm._v(" "),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("(")]),_c(\'span\',{staticClass:"token parameter"},[_vm._v("event")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(")")]),_vm._v(" "),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("{")]),_vm._v("\\n      "),_c(\'span\',{staticClass:"token function"},[_vm._v("alert")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("(")]),_vm._v("event"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(".")]),_vm._v("relatedTarget"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(".")]),_vm._v("id\\n            "),_c(\'span\',{staticClass:"token operator"},[_vm._v("+")]),_vm._v(" "),_c(\'span\',{staticClass:"token string"},[_vm._v("\' was dropped into \'")]),_vm._v("\\n            "),_c(\'span\',{staticClass:"token operator"},[_vm._v("+")]),_vm._v(" event"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(".")]),_vm._v("target"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(".")]),_vm._v("id"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(")")]),_vm._v("\\n    "),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("}")]),_vm._v("\\n  "),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("}")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(")")]),_vm._v("\\n  "),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(".")]),_c(\'span\',{staticClass:"token function"},[_vm._v("on")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("(")]),_c(\'span\',{staticClass:"token string"},[_vm._v("\'dropactivate\'")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(",")]),_vm._v(" "),_c(\'span\',{staticClass:"token keyword"},[_vm._v("function")]),_vm._v(" "),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("(")]),_c(\'span\',{staticClass:"token parameter"},[_vm._v("event")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(")")]),_vm._v(" "),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("{")]),_vm._v("\\n    event"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(".")]),_vm._v("target"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(".")]),_vm._v("classList"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(".")]),_c(\'span\',{staticClass:"token function"},[_vm._v("add")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("(")]),_c(\'span\',{staticClass:"token string"},[_vm._v("\'drop-activated\'")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(")")]),_vm._v("\\n  "),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("}")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(")")]),_vm._v("\\n")])]),_vm._v(" "),_c(\'h2\',{staticClass:"title is-3",attrs:{"id":"dropzone-events"}},[_c(\'a\',{staticClass:"header-anchor",attrs:{"href":"#dropzone-events","aria-hidden":"true"}}),_vm._v(" Dropzone Events")]),_vm._v(" "),_c(\'p\',[_vm._v("Dropzone events are plain objects with the following properties:")]),_vm._v(" "),_c(\'table\',{staticClass:"table is-bordered"},[_c(\'thead\',[_c(\'tr\',[_c(\'th\',[_vm._v("Property")]),_vm._v(" "),_c(\'th\',[_vm._v("Description")])])]),_vm._v(" "),_c(\'tbody\',[_c(\'tr\',[_c(\'td\',[_c(\'code\',{pre:true},[_vm._v("target")])]),_vm._v(" "),_c(\'td\',[_vm._v("The dropzone element")])]),_vm._v(" "),_c(\'tr\',[_c(\'td\',[_c(\'code\',{pre:true},[_vm._v("dropzone")])]),_vm._v(" "),_c(\'td\',[_vm._v("The dropzone Interactable")])]),_vm._v(" "),_c(\'tr\',[_c(\'td\',[_c(\'code\',{pre:true},[_vm._v("relatedTarget")])]),_vm._v(" "),_c(\'td\',[_vm._v("The element that\'s being dragged")])]),_vm._v(" "),_c(\'tr\',[_c(\'td\',[_c(\'code\',{pre:true},[_vm._v("draggable")])]),_vm._v(" "),_c(\'td\',[_vm._v("The Interactable that\'s being dragged")])]),_vm._v(" "),_c(\'tr\',[_c(\'td\',[_c(\'code\',{pre:true},[_vm._v("dragEvent")])]),_vm._v(" "),_c(\'td\',[_vm._v("The related drag event – drag{start,move,end}")])]),_vm._v(" "),_c(\'tr\',[_c(\'td\',[_c(\'code\',{pre:true},[_vm._v("timeStamp")])]),_vm._v(" "),_c(\'td\',[_vm._v("Time of the event")])]),_vm._v(" "),_c(\'tr\',[_c(\'td\',[_c(\'code\',{pre:true},[_vm._v("type")])]),_vm._v(" "),_c(\'td\',[_vm._v("The event type")])])])]),_vm._v(" "),_c(\'pre\',[_c(\'code\',{staticClass:"language-javascript"},[_c(\'span\',{staticClass:"token function"},[_vm._v("interact")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("(")]),_c(\'span\',{staticClass:"token string"},[_vm._v("\'.dropzone\'")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(")")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(".")]),_c(\'span\',{staticClass:"token function"},[_vm._v("dropzone")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("(")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("{")]),_vm._v("\\n  accept"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(":")]),_vm._v(" "),_c(\'span\',{staticClass:"token string"},[_vm._v("\'.drag0, .drag1\'")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(",")]),_vm._v("\\n"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("}")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(")")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(";")]),_vm._v("\\n")])]),_vm._v(" "),_c(\'h2\',{staticClass:"title is-3",attrs:{"id":"accept"}},[_c(\'a\',{staticClass:"header-anchor",attrs:{"href":"#accept","aria-hidden":"true"}}),_vm._v(" "),_c(\'code\',{pre:true},[_vm._v("accept")])]),_vm._v(" "),_c(\'p\',[_vm._v("The dropzone "),_c(\'code\',{pre:true},[_vm._v("accept")]),_vm._v(" option is a CSS selector or element which must match the\\ndragged element in order for drop events to be fired.")]),_vm._v(" "),_c(\'pre\',[_c(\'code\',{staticClass:"language-javascript"},[_c(\'span\',{staticClass:"token function"},[_vm._v("interact")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("(")]),_vm._v("target"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(")")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(".")]),_c(\'span\',{staticClass:"token function"},[_vm._v("dropzone")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("(")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("{")]),_vm._v("\\n  overlap"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(":")]),_vm._v(" "),_c(\'span\',{staticClass:"token number"},[_vm._v("0.25")]),_vm._v("\\n"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("}")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(")")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(";")]),_vm._v("\\n")])]),_vm._v(" "),_c(\'p\',[_vm._v("The "),_c(\'code\',{pre:true},[_vm._v("overlap")]),_vm._v(" option sets how drops are checked for. The allowed values are:")]),_vm._v(" "),_c(\'ul\',[_c(\'li\',[_c(\'code\',{pre:true},[_vm._v("\'pointer\'")]),_vm._v(" – the pointer must be over the dropzone (default)")]),_vm._v(" "),_c(\'li\',[_c(\'code\',{pre:true},[_vm._v("\'center\'")]),_vm._v(" – the draggable element\'s center must be over the dropzone")]),_vm._v(" "),_c(\'li\',[_vm._v("a number from 0-1 which is the (intersection area) / (draggable area).  e.g.\\n"),_c(\'code\',{pre:true},[_vm._v("0.5")]),_vm._v(" for drop to happen when half of the area of the draggable is over the\\ndropzone")])]),_vm._v(" "),_c(\'h2\',{staticClass:"title is-3",attrs:{"id":"checker"}},[_c(\'a\',{staticClass:"header-anchor",attrs:{"href":"#checker","aria-hidden":"true"}}),_vm._v(" "),_c(\'code\',{pre:true},[_vm._v("checker")])]),_vm._v(" "),_c(\'p\',[_vm._v("The "),_c(\'code\',{pre:true},[_vm._v("checker")]),_vm._v(" option is a function that you set to additionally check if a\\ndragged element can be dropped into a dropzone.")]),_vm._v(" "),_c(\'pre\',[_c(\'code\',{staticClass:"language-javascript"},[_c(\'span\',{staticClass:"token function"},[_vm._v("interact")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("(")]),_vm._v("target"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(")")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(".")]),_c(\'span\',{staticClass:"token function"},[_vm._v("dropzone")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("(")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("{")]),_vm._v("\\n  "),_c(\'span\',{staticClass:"token function-variable function"},[_vm._v("checker")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(":")]),_vm._v(" "),_c(\'span\',{staticClass:"token keyword"},[_vm._v("function")]),_vm._v(" "),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("(")]),_vm._v("dragEvent"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(",")]),_vm._v("         "),_c(\'span\',{staticClass:"token comment"},[_vm._v("// related dragmove or dragend")]),_vm._v("\\n                     event"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(",")]),_vm._v("             "),_c(\'span\',{staticClass:"token comment"},[_vm._v("// Touch, Pointer or Mouse Event")]),_vm._v("\\n                     dropped"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(",")]),_vm._v("           "),_c(\'span\',{staticClass:"token comment"},[_vm._v("// bool default checker result")]),_vm._v("\\n                     dropzone"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(",")]),_vm._v("          "),_c(\'span\',{staticClass:"token comment"},[_vm._v("// dropzone Interactable")]),_vm._v("\\n                     dropElement"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(",")]),_vm._v("       "),_c(\'span\',{staticClass:"token comment"},[_vm._v("// dropzone elemnt")]),_vm._v("\\n                     draggable"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(",")]),_vm._v("         "),_c(\'span\',{staticClass:"token comment"},[_vm._v("// draggable Interactable")]),_vm._v("\\n                     draggableElement"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(")")]),_vm._v(" "),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("{")]),_c(\'span\',{staticClass:"token comment"},[_vm._v("// draggable element")]),_vm._v("\\n\\n    "),_c(\'span\',{staticClass:"token comment"},[_vm._v("// only allow drops into empty dropzone elements")]),_vm._v("\\n    "),_c(\'span\',{staticClass:"token keyword"},[_vm._v("return")]),_vm._v(" dropped "),_c(\'span\',{staticClass:"token operator"},[_vm._v("&&")]),_vm._v(" "),_c(\'span\',{staticClass:"token operator"},[_vm._v("!")]),_vm._v("dropElement"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(".")]),_c(\'span\',{staticClass:"token function"},[_vm._v("hasChildNodes")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("(")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(")")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(";")]),_vm._v("\\n  "),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("}")]),_vm._v("\\n"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("}")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(")")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(";")]),_vm._v("\\n")])]),_vm._v(" "),_c(\'p\',[_vm._v("The checker function takes the following arguments:")]),_vm._v(" "),_c(\'table\',{staticClass:"table is-bordered"},[_c(\'thead\',[_c(\'tr\',[_c(\'th\',[_vm._v("Arg")]),_vm._v(" "),_c(\'th\',[_vm._v("Description")])])]),_vm._v(" "),_c(\'tbody\',[_c(\'tr\',[_c(\'td\',[_c(\'code\',{pre:true},[_vm._v("dragEvent")])]),_vm._v(" "),_c(\'td\',[_vm._v("related dragmove or dragend event")])]),_vm._v(" "),_c(\'tr\',[_c(\'td\',[_c(\'code\',{pre:true},[_vm._v("event")])]),_vm._v(" "),_c(\'td\',[_vm._v("The user move/up/end Event related to the dragEvent")])]),_vm._v(" "),_c(\'tr\',[_c(\'td\',[_c(\'code\',{pre:true},[_vm._v("dropped")])]),_vm._v(" "),_c(\'td\',[_vm._v("The value from the default drop checker")])]),_vm._v(" "),_c(\'tr\',[_c(\'td\',[_c(\'code\',{pre:true},[_vm._v("dropzone")])]),_vm._v(" "),_c(\'td\',[_vm._v("The dropzone interactable")])]),_vm._v(" "),_c(\'tr\',[_c(\'td\',[_c(\'code\',{pre:true},[_vm._v("dropElement")])]),_vm._v(" "),_c(\'td\',[_vm._v("The dropzone element")])]),_vm._v(" "),_c(\'tr\',[_c(\'td\',[_c(\'code\',{pre:true},[_vm._v("draggable")])]),_vm._v(" "),_c(\'td\',[_vm._v("The Interactable being dragged")])]),_vm._v(" "),_c(\'tr\',[_c(\'td\',[_c(\'code\',{pre:true},[_vm._v("draggableElement")])]),_vm._v(" "),_c(\'td\',[_vm._v("The actual element that\'s being dragged")])])])])]) }]',component:{data:function(){return{templateRender:null}},render:function(t){return this.templateRender?this.templateRender():t("div","Rendering")},created:function(){this.templateRender=function(){var t=this,n=t.$createElement;t._self._c;return t._m(0)},this.$options.staticRenderFns=[function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("div",{staticClass:"frontmatter-markdown"},[e("h1",{staticClass:"title is-2",attrs:{id:"dropzone"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dropzone","aria-hidden":"true"}}),t._v(" Dropzone")]),t._v(" "),e("p",[t._v('Dropzones define elements that draggable targets can be "dropped" into and which\nelements will be accepted. Like with drag events, drop events don\'t modify the\nDOM to re-parent elements. You will have to do this in your own event listeners\nif you need this.')]),t._v(" "),e("pre",[e("code",{staticClass:"language-javascript"},[e("span",{staticClass:"token function"},[t._v("interact")]),e("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("dropTarget"),e("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n  "),e("span",{staticClass:"token punctuation"},[t._v(".")]),e("span",{staticClass:"token function"},[t._v("dropzone")]),e("span",{staticClass:"token punctuation"},[t._v("(")]),e("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n    "),e("span",{staticClass:"token function-variable function"},[t._v("ondrop")]),e("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),e("span",{staticClass:"token keyword"},[t._v("function")]),t._v(" "),e("span",{staticClass:"token punctuation"},[t._v("(")]),e("span",{staticClass:"token parameter"},[t._v("event")]),e("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),e("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n      "),e("span",{staticClass:"token function"},[t._v("alert")]),e("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("event"),e("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("relatedTarget"),e("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("id\n            "),e("span",{staticClass:"token operator"},[t._v("+")]),t._v(" "),e("span",{staticClass:"token string"},[t._v("' was dropped into '")]),t._v("\n            "),e("span",{staticClass:"token operator"},[t._v("+")]),t._v(" event"),e("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("target"),e("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("id"),e("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n    "),e("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n  "),e("span",{staticClass:"token punctuation"},[t._v("}")]),e("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n  "),e("span",{staticClass:"token punctuation"},[t._v(".")]),e("span",{staticClass:"token function"},[t._v("on")]),e("span",{staticClass:"token punctuation"},[t._v("(")]),e("span",{staticClass:"token string"},[t._v("'dropactivate'")]),e("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),e("span",{staticClass:"token keyword"},[t._v("function")]),t._v(" "),e("span",{staticClass:"token punctuation"},[t._v("(")]),e("span",{staticClass:"token parameter"},[t._v("event")]),e("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),e("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n    event"),e("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("target"),e("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("classList"),e("span",{staticClass:"token punctuation"},[t._v(".")]),e("span",{staticClass:"token function"},[t._v("add")]),e("span",{staticClass:"token punctuation"},[t._v("(")]),e("span",{staticClass:"token string"},[t._v("'drop-activated'")]),e("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n  "),e("span",{staticClass:"token punctuation"},[t._v("}")]),e("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n")])]),t._v(" "),e("h2",{staticClass:"title is-3",attrs:{id:"dropzone-events"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dropzone-events","aria-hidden":"true"}}),t._v(" Dropzone Events")]),t._v(" "),e("p",[t._v("Dropzone events are plain objects with the following properties:")]),t._v(" "),e("table",{staticClass:"table is-bordered"},[e("thead",[e("tr",[e("th",[t._v("Property")]),t._v(" "),e("th",[t._v("Description")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("code",{pre:!0},[t._v("target")])]),t._v(" "),e("td",[t._v("The dropzone element")])]),t._v(" "),e("tr",[e("td",[e("code",{pre:!0},[t._v("dropzone")])]),t._v(" "),e("td",[t._v("The dropzone Interactable")])]),t._v(" "),e("tr",[e("td",[e("code",{pre:!0},[t._v("relatedTarget")])]),t._v(" "),e("td",[t._v("The element that's being dragged")])]),t._v(" "),e("tr",[e("td",[e("code",{pre:!0},[t._v("draggable")])]),t._v(" "),e("td",[t._v("The Interactable that's being dragged")])]),t._v(" "),e("tr",[e("td",[e("code",{pre:!0},[t._v("dragEvent")])]),t._v(" "),e("td",[t._v("The related drag event – drag{start,move,end}")])]),t._v(" "),e("tr",[e("td",[e("code",{pre:!0},[t._v("timeStamp")])]),t._v(" "),e("td",[t._v("Time of the event")])]),t._v(" "),e("tr",[e("td",[e("code",{pre:!0},[t._v("type")])]),t._v(" "),e("td",[t._v("The event type")])])])]),t._v(" "),e("pre",[e("code",{staticClass:"language-javascript"},[e("span",{staticClass:"token function"},[t._v("interact")]),e("span",{staticClass:"token punctuation"},[t._v("(")]),e("span",{staticClass:"token string"},[t._v("'.dropzone'")]),e("span",{staticClass:"token punctuation"},[t._v(")")]),e("span",{staticClass:"token punctuation"},[t._v(".")]),e("span",{staticClass:"token function"},[t._v("dropzone")]),e("span",{staticClass:"token punctuation"},[t._v("(")]),e("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n  accept"),e("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),e("span",{staticClass:"token string"},[t._v("'.drag0, .drag1'")]),e("span",{staticClass:"token punctuation"},[t._v(",")]),t._v("\n"),e("span",{staticClass:"token punctuation"},[t._v("}")]),e("span",{staticClass:"token punctuation"},[t._v(")")]),e("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n")])]),t._v(" "),e("h2",{staticClass:"title is-3",attrs:{id:"accept"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#accept","aria-hidden":"true"}}),t._v(" "),e("code",{pre:!0},[t._v("accept")])]),t._v(" "),e("p",[t._v("The dropzone "),e("code",{pre:!0},[t._v("accept")]),t._v(" option is a CSS selector or element which must match the\ndragged element in order for drop events to be fired.")]),t._v(" "),e("pre",[e("code",{staticClass:"language-javascript"},[e("span",{staticClass:"token function"},[t._v("interact")]),e("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("target"),e("span",{staticClass:"token punctuation"},[t._v(")")]),e("span",{staticClass:"token punctuation"},[t._v(".")]),e("span",{staticClass:"token function"},[t._v("dropzone")]),e("span",{staticClass:"token punctuation"},[t._v("(")]),e("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n  overlap"),e("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),e("span",{staticClass:"token number"},[t._v("0.25")]),t._v("\n"),e("span",{staticClass:"token punctuation"},[t._v("}")]),e("span",{staticClass:"token punctuation"},[t._v(")")]),e("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n")])]),t._v(" "),e("p",[t._v("The "),e("code",{pre:!0},[t._v("overlap")]),t._v(" option sets how drops are checked for. The allowed values are:")]),t._v(" "),e("ul",[e("li",[e("code",{pre:!0},[t._v("'pointer'")]),t._v(" – the pointer must be over the dropzone (default)")]),t._v(" "),e("li",[e("code",{pre:!0},[t._v("'center'")]),t._v(" – the draggable element's center must be over the dropzone")]),t._v(" "),e("li",[t._v("a number from 0-1 which is the (intersection area) / (draggable area).  e.g.\n"),e("code",{pre:!0},[t._v("0.5")]),t._v(" for drop to happen when half of the area of the draggable is over the\ndropzone")])]),t._v(" "),e("h2",{staticClass:"title is-3",attrs:{id:"checker"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#checker","aria-hidden":"true"}}),t._v(" "),e("code",{pre:!0},[t._v("checker")])]),t._v(" "),e("p",[t._v("The "),e("code",{pre:!0},[t._v("checker")]),t._v(" option is a function that you set to additionally check if a\ndragged element can be dropped into a dropzone.")]),t._v(" "),e("pre",[e("code",{staticClass:"language-javascript"},[e("span",{staticClass:"token function"},[t._v("interact")]),e("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("target"),e("span",{staticClass:"token punctuation"},[t._v(")")]),e("span",{staticClass:"token punctuation"},[t._v(".")]),e("span",{staticClass:"token function"},[t._v("dropzone")]),e("span",{staticClass:"token punctuation"},[t._v("(")]),e("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n  "),e("span",{staticClass:"token function-variable function"},[t._v("checker")]),e("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),e("span",{staticClass:"token keyword"},[t._v("function")]),t._v(" "),e("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("dragEvent"),e("span",{staticClass:"token punctuation"},[t._v(",")]),t._v("         "),e("span",{staticClass:"token comment"},[t._v("// related dragmove or dragend")]),t._v("\n                     event"),e("span",{staticClass:"token punctuation"},[t._v(",")]),t._v("             "),e("span",{staticClass:"token comment"},[t._v("// Touch, Pointer or Mouse Event")]),t._v("\n                     dropped"),e("span",{staticClass:"token punctuation"},[t._v(",")]),t._v("           "),e("span",{staticClass:"token comment"},[t._v("// bool default checker result")]),t._v("\n                     dropzone"),e("span",{staticClass:"token punctuation"},[t._v(",")]),t._v("          "),e("span",{staticClass:"token comment"},[t._v("// dropzone Interactable")]),t._v("\n                     dropElement"),e("span",{staticClass:"token punctuation"},[t._v(",")]),t._v("       "),e("span",{staticClass:"token comment"},[t._v("// dropzone elemnt")]),t._v("\n                     draggable"),e("span",{staticClass:"token punctuation"},[t._v(",")]),t._v("         "),e("span",{staticClass:"token comment"},[t._v("// draggable Interactable")]),t._v("\n                     draggableElement"),e("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),e("span",{staticClass:"token punctuation"},[t._v("{")]),e("span",{staticClass:"token comment"},[t._v("// draggable element")]),t._v("\n\n    "),e("span",{staticClass:"token comment"},[t._v("// only allow drops into empty dropzone elements")]),t._v("\n    "),e("span",{staticClass:"token keyword"},[t._v("return")]),t._v(" dropped "),e("span",{staticClass:"token operator"},[t._v("&&")]),t._v(" "),e("span",{staticClass:"token operator"},[t._v("!")]),t._v("dropElement"),e("span",{staticClass:"token punctuation"},[t._v(".")]),e("span",{staticClass:"token function"},[t._v("hasChildNodes")]),e("span",{staticClass:"token punctuation"},[t._v("(")]),e("span",{staticClass:"token punctuation"},[t._v(")")]),e("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n  "),e("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n"),e("span",{staticClass:"token punctuation"},[t._v("}")]),e("span",{staticClass:"token punctuation"},[t._v(")")]),e("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n")])]),t._v(" "),e("p",[t._v("The checker function takes the following arguments:")]),t._v(" "),e("table",{staticClass:"table is-bordered"},[e("thead",[e("tr",[e("th",[t._v("Arg")]),t._v(" "),e("th",[t._v("Description")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("code",{pre:!0},[t._v("dragEvent")])]),t._v(" "),e("td",[t._v("related dragmove or dragend event")])]),t._v(" "),e("tr",[e("td",[e("code",{pre:!0},[t._v("event")])]),t._v(" "),e("td",[t._v("The user move/up/end Event related to the dragEvent")])]),t._v(" "),e("tr",[e("td",[e("code",{pre:!0},[t._v("dropped")])]),t._v(" "),e("td",[t._v("The value from the default drop checker")])]),t._v(" "),e("tr",[e("td",[e("code",{pre:!0},[t._v("dropzone")])]),t._v(" "),e("td",[t._v("The dropzone interactable")])]),t._v(" "),e("tr",[e("td",[e("code",{pre:!0},[t._v("dropElement")])]),t._v(" "),e("td",[t._v("The dropzone element")])]),t._v(" "),e("tr",[e("td",[e("code",{pre:!0},[t._v("draggable")])]),t._v(" "),e("td",[t._v("The Interactable being dragged")])]),t._v(" "),e("tr",[e("td",[e("code",{pre:!0},[t._v("draggableElement")])]),t._v(" "),e("td",[t._v("The actual element that's being dragged")])])])])])}]}}}}}}]);
//# sourceMappingURL=chunk-2d221bb3.c20987de.js.map