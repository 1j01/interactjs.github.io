(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d2134e9"],{abb4:function(t,n){t.exports={body:"Resizable\n=========\n\n```javascript\ninteract(target)\n  .resizable({\n    edges: {\n      top   : true,       // Use pointer coords to check for resize.\n      left  : false,      // Disable resizing from left edge.\n      bottom: '.resize-s',// Resize if pointer target matches selector\n      right : handleEl    // Resize if pointer target is the given Element\n    }\n  })\n```\n\nResize events have `rect` and `deltaRect` properties. `rect` is updated on each\n`resizemove` event and the values in `deltaRect` reflect the changes. In\n`resizestart`, `rect` will be identical to the rect returned by\n`interactable.getRect(element)` and `deltaRect` will have all-zero properties.\n\n| Resize Event property   | Description                                       |\n| ----------------------- | --------------------------------------------------|\n| `edges`                 | The edges of the element that are being changed   |\n| `rect`                  | An object with the new dimensions of the target   |\n| `deltaRect`             | The change in dimensions since the previous event |\n\nResizable options have an `edges` property which specifies the edges of the\nelement which can be resized from (top, left, bottom or right).\n\n<aside class=\"notice\">\nRemember to use CSS `touch-action: none` to prevent the browser from panning\nwhen the user drags with a touch pointer, and `user-select: none` to disable\ntext selection.\n</aside>\n\n```html\n<div data-x=0 data-y=0 class=\"resizable\">\n  \x3c!-- top-left resize handle --\x3e\n  <div class=\"resize-top resize-left\"></div>\n\n  \x3c!-- bottom-right resize handle --\x3e\n  <div class=\"resize-bottom resize-right\"></div>\n</div>\n```\n```js\ninteract('.resizable')\n  .resizable({\n    edges: {\n      top   : '.resize-top',\n      left  : '.resize-left',\n      bottom: '.resize-bottom',\n      right : '.resize-right'\n    },\n  })\n  .on('resizemove', event => {\n    let { x, y } = event.target.dataset\n\n    x = parseFloat(x) || 0\n    y = parseFloat(y) || 0\n\n    Object.assign(event.target.style, {\n      width: `${event.rect.width}px`,\n      height: `${event.rect.height}px`,\n      transform: `translate(${event.deltaRect.left}px, ${event.deltaRect.top}px)`\n    })\n\n    Object.assign(event.target.dataset, { x, y })\n  })\n```\n\nIf you'd like an element to behave as a resize corner, let it match the\nselectors of two adjacent edges.\n\nResize handle elements must be children of the resizable element. If you need\nthe handles to be outside the target element, then you will need to use\n[`Interaction#start`](interaction-start).\n\n`invert`\n--------\n\n```javascript\ninteract(target).resizable({\n  edges: { bottom: true, right: true },\n  invert: 'reposition'\n})\n```\n\nBy default, resize actions can't make the `event.rect` smaller than `0x0`. Use\nthe `invert` option to specify what should happen if the target would be resized\nto dimensions less than `0x0`. The possible values are:\n\n - `'none'` (default) will limit the resize rect to a minimum of `0x0`\n - `'negate'` will allow the rect to have negative width/height\n - `'reposition'` will keep the width/height positive by swapping the top and\n bottom edges and/or swapping the left and right edges\n\n[Demo on Codepen][resize-codepen]\n\n[interaction-start]: http://interactjs.io/api/#Interaction.start\n[resize-codepen]: http://codepen.io/taye/pen/LEpmOL\n",html:'<h1 id="resizable" class="title is-2"><a class="header-anchor" href="#resizable" aria-hidden="true"></a> Resizable</h1>\n<pre><code class="language-javascript"><span class="token function">interact</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span>\n  <span class="token punctuation">.</span><span class="token function">resizable</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    edges<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n      top   <span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>       <span class="token comment">// Use pointer coords to check for resize.</span>\n      left  <span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>      <span class="token comment">// Disable resizing from left edge.</span>\n      bottom<span class="token punctuation">:</span> <span class="token string">\'.resize-s\'</span><span class="token punctuation">,</span><span class="token comment">// Resize if pointer target matches selector</span>\n      right <span class="token punctuation">:</span> handleEl    <span class="token comment">// Resize if pointer target is the given Element</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre>\n<p>Resize events have <code>rect</code> and <code>deltaRect</code> properties. <code>rect</code> is updated on each\n<code>resizemove</code> event and the values in <code>deltaRect</code> reflect the changes. In\n<code>resizestart</code>, <code>rect</code> will be identical to the rect returned by\n<code>interactable.getRect(element)</code> and <code>deltaRect</code> will have all-zero properties.</p>\n<table class="table is-bordered">\n<thead>\n<tr>\n<th>Resize Event property</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>edges</code></td>\n<td>The edges of the element that are being changed</td>\n</tr>\n<tr>\n<td><code>rect</code></td>\n<td>An object with the new dimensions of the target</td>\n</tr>\n<tr>\n<td><code>deltaRect</code></td>\n<td>The change in dimensions since the previous event</td>\n</tr>\n</tbody>\n</table>\n<p>Resizable options have an <code>edges</code> property which specifies the edges of the\nelement which can be resized from (top, left, bottom or right).</p>\n<aside class="notice">\nRemember to use CSS `touch-action: none` to prevent the browser from panning\nwhen the user drags with a touch pointer, and `user-select: none` to disable\ntext selection.\n</aside>\n<pre><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">data-x</span><span class="token attr-value"><span class="token punctuation">=</span>0</span> <span class="token attr-name">data-y</span><span class="token attr-value"><span class="token punctuation">=</span>0</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>resizable<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n  <span class="token comment">&lt;!-- top-left resize handle --\x3e</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>resize-top resize-left<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n  <span class="token comment">&lt;!-- bottom-right resize handle --\x3e</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>resize-bottom resize-right<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n</code></pre>\n<pre><code class="language-js"><span class="token function">interact</span><span class="token punctuation">(</span><span class="token string">\'.resizable\'</span><span class="token punctuation">)</span>\n  <span class="token punctuation">.</span><span class="token function">resizable</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    edges<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n      top   <span class="token punctuation">:</span> <span class="token string">\'.resize-top\'</span><span class="token punctuation">,</span>\n      left  <span class="token punctuation">:</span> <span class="token string">\'.resize-left\'</span><span class="token punctuation">,</span>\n      bottom<span class="token punctuation">:</span> <span class="token string">\'.resize-bottom\'</span><span class="token punctuation">,</span>\n      right <span class="token punctuation">:</span> <span class="token string">\'.resize-right\'</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">\'resizemove\'</span><span class="token punctuation">,</span> <span class="token parameter">event</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> <span class="token punctuation">{</span> x<span class="token punctuation">,</span> y <span class="token punctuation">}</span> <span class="token operator">=</span> event<span class="token punctuation">.</span>target<span class="token punctuation">.</span>dataset\n\n    x <span class="token operator">=</span> <span class="token function">parseFloat</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token number">0</span>\n    y <span class="token operator">=</span> <span class="token function">parseFloat</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token number">0</span>\n\n    Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>target<span class="token punctuation">.</span>style<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n      width<span class="token punctuation">:</span> <span class="token template-string"><span class="token string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>event<span class="token punctuation">.</span>rect<span class="token punctuation">.</span>width<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">px`</span></span><span class="token punctuation">,</span>\n      height<span class="token punctuation">:</span> <span class="token template-string"><span class="token string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>event<span class="token punctuation">.</span>rect<span class="token punctuation">.</span>height<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">px`</span></span><span class="token punctuation">,</span>\n      transform<span class="token punctuation">:</span> <span class="token template-string"><span class="token string">`translate(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>event<span class="token punctuation">.</span>deltaRect<span class="token punctuation">.</span>left<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">px, </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>event<span class="token punctuation">.</span>deltaRect<span class="token punctuation">.</span>top<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">px)`</span></span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n    Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>target<span class="token punctuation">.</span>dataset<span class="token punctuation">,</span> <span class="token punctuation">{</span> x<span class="token punctuation">,</span> y <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre>\n<p>If you\'d like an element to behave as a resize corner, let it match the\nselectors of two adjacent edges.</p>\n<p>Resize handle elements must be children of the resizable element. If you need\nthe handles to be outside the target element, then you will need to use\n<a href="interaction-start"><code>Interaction#start</code></a>.</p>\n<h2 id="invert" class="title is-3"><a class="header-anchor" href="#invert" aria-hidden="true"></a> <code>invert</code></h2>\n<pre><code class="language-javascript"><span class="token function">interact</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">resizable</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  edges<span class="token punctuation">:</span> <span class="token punctuation">{</span> bottom<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> right<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  invert<span class="token punctuation">:</span> <span class="token string">\'reposition\'</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre>\n<p>By default, resize actions can\'t make the <code>event.rect</code> smaller than <code>0x0</code>. Use\nthe <code>invert</code> option to specify what should happen if the target would be resized\nto dimensions less than <code>0x0</code>. The possible values are:</p>\n<ul>\n<li><code>\'none\'</code> (default) will limit the resize rect to a minimum of <code>0x0</code></li>\n<li><code>\'negate\'</code> will allow the rect to have negative width/height</li>\n<li><code>\'reposition\'</code> will keep the width/height positive by swapping the top and\nbottom edges and/or swapping the left and right edges</li>\n</ul>\n<p><a href="http://codepen.io/taye/pen/LEpmOL">Demo on Codepen</a></p>\n',attributes:{},vue:{render:"return function render() { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0) }",staticRenderFns:'return [function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'div\',{staticClass:"frontmatter-markdown"},[_c(\'h1\',{staticClass:"title is-2",attrs:{"id":"resizable"}},[_c(\'a\',{staticClass:"header-anchor",attrs:{"href":"#resizable","aria-hidden":"true"}}),_vm._v(" Resizable")]),_vm._v(" "),_c(\'pre\',[_c(\'code\',{staticClass:"language-javascript"},[_c(\'span\',{staticClass:"token function"},[_vm._v("interact")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("(")]),_vm._v("target"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(")")]),_vm._v("\\n  "),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(".")]),_c(\'span\',{staticClass:"token function"},[_vm._v("resizable")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("(")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("{")]),_vm._v("\\n    edges"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(":")]),_vm._v(" "),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("{")]),_vm._v("\\n      top   "),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(":")]),_vm._v(" "),_c(\'span\',{staticClass:"token boolean"},[_vm._v("true")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(",")]),_vm._v("       "),_c(\'span\',{staticClass:"token comment"},[_vm._v("// Use pointer coords to check for resize.")]),_vm._v("\\n      left  "),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(":")]),_vm._v(" "),_c(\'span\',{staticClass:"token boolean"},[_vm._v("false")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(",")]),_vm._v("      "),_c(\'span\',{staticClass:"token comment"},[_vm._v("// Disable resizing from left edge.")]),_vm._v("\\n      bottom"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(":")]),_vm._v(" "),_c(\'span\',{staticClass:"token string"},[_vm._v("\'.resize-s\'")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(",")]),_c(\'span\',{staticClass:"token comment"},[_vm._v("// Resize if pointer target matches selector")]),_vm._v("\\n      right "),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(":")]),_vm._v(" handleEl    "),_c(\'span\',{staticClass:"token comment"},[_vm._v("// Resize if pointer target is the given Element")]),_vm._v("\\n    "),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("}")]),_vm._v("\\n  "),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("}")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(")")]),_vm._v("\\n")])]),_vm._v(" "),_c(\'p\',[_vm._v("Resize events have "),_c(\'code\',{pre:true},[_vm._v("rect")]),_vm._v(" and "),_c(\'code\',{pre:true},[_vm._v("deltaRect")]),_vm._v(" properties. "),_c(\'code\',{pre:true},[_vm._v("rect")]),_vm._v(" is updated on each\\n"),_c(\'code\',{pre:true},[_vm._v("resizemove")]),_vm._v(" event and the values in "),_c(\'code\',{pre:true},[_vm._v("deltaRect")]),_vm._v(" reflect the changes. In\\n"),_c(\'code\',{pre:true},[_vm._v("resizestart")]),_vm._v(", "),_c(\'code\',{pre:true},[_vm._v("rect")]),_vm._v(" will be identical to the rect returned by\\n"),_c(\'code\',{pre:true},[_vm._v("interactable.getRect(element)")]),_vm._v(" and "),_c(\'code\',{pre:true},[_vm._v("deltaRect")]),_vm._v(" will have all-zero properties.")]),_vm._v(" "),_c(\'table\',{staticClass:"table is-bordered"},[_c(\'thead\',[_c(\'tr\',[_c(\'th\',[_vm._v("Resize Event property")]),_vm._v(" "),_c(\'th\',[_vm._v("Description")])])]),_vm._v(" "),_c(\'tbody\',[_c(\'tr\',[_c(\'td\',[_c(\'code\',{pre:true},[_vm._v("edges")])]),_vm._v(" "),_c(\'td\',[_vm._v("The edges of the element that are being changed")])]),_vm._v(" "),_c(\'tr\',[_c(\'td\',[_c(\'code\',{pre:true},[_vm._v("rect")])]),_vm._v(" "),_c(\'td\',[_vm._v("An object with the new dimensions of the target")])]),_vm._v(" "),_c(\'tr\',[_c(\'td\',[_c(\'code\',{pre:true},[_vm._v("deltaRect")])]),_vm._v(" "),_c(\'td\',[_vm._v("The change in dimensions since the previous event")])])])]),_vm._v(" "),_c(\'p\',[_vm._v("Resizable options have an "),_c(\'code\',{pre:true},[_vm._v("edges")]),_vm._v(" property which specifies the edges of the\\nelement which can be resized from (top, left, bottom or right).")]),_vm._v(" "),_c(\'aside\',{staticClass:"notice"},[_vm._v("\\nRemember to use CSS `touch-action: none` to prevent the browser from panning\\nwhen the user drags with a touch pointer, and `user-select: none` to disable\\ntext selection.\\n")]),_vm._v(" "),_c(\'pre\',[_c(\'code\',{staticClass:"language-html"},[_c(\'span\',{staticClass:"token tag"},[_c(\'span\',{staticClass:"token tag"},[_c(\'span\',{staticClass:"token punctuation"},[_vm._v("<")]),_vm._v("div")]),_vm._v(" "),_c(\'span\',{staticClass:"token attr-name"},[_vm._v("data-x")]),_c(\'span\',{staticClass:"token attr-value"},[_c(\'span\',{staticClass:"token punctuation"},[_vm._v("=")]),_vm._v("0")]),_vm._v(" "),_c(\'span\',{staticClass:"token attr-name"},[_vm._v("data-y")]),_c(\'span\',{staticClass:"token attr-value"},[_c(\'span\',{staticClass:"token punctuation"},[_vm._v("=")]),_vm._v("0")]),_vm._v(" "),_c(\'span\',{staticClass:"token attr-name"},[_vm._v("class")]),_c(\'span\',{staticClass:"token attr-value"},[_c(\'span\',{staticClass:"token punctuation"},[_vm._v("=")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("\\"")]),_vm._v("resizable"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("\\"")])]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(">")])]),_vm._v("\\n  "),_c(\'span\',{staticClass:"token comment"},[_vm._v("\x3c!-- top-left resize handle --\x3e")]),_vm._v("\\n  "),_c(\'span\',{staticClass:"token tag"},[_c(\'span\',{staticClass:"token tag"},[_c(\'span\',{staticClass:"token punctuation"},[_vm._v("<")]),_vm._v("div")]),_vm._v(" "),_c(\'span\',{staticClass:"token attr-name"},[_vm._v("class")]),_c(\'span\',{staticClass:"token attr-value"},[_c(\'span\',{staticClass:"token punctuation"},[_vm._v("=")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("\\"")]),_vm._v("resize-top resize-left"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("\\"")])]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(">")])]),_c(\'span\',{staticClass:"token tag"},[_c(\'span\',{staticClass:"token tag"},[_c(\'span\',{staticClass:"token punctuation"},[_vm._v("</")]),_vm._v("div")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(">")])]),_vm._v("\\n\\n  "),_c(\'span\',{staticClass:"token comment"},[_vm._v("\x3c!-- bottom-right resize handle --\x3e")]),_vm._v("\\n  "),_c(\'span\',{staticClass:"token tag"},[_c(\'span\',{staticClass:"token tag"},[_c(\'span\',{staticClass:"token punctuation"},[_vm._v("<")]),_vm._v("div")]),_vm._v(" "),_c(\'span\',{staticClass:"token attr-name"},[_vm._v("class")]),_c(\'span\',{staticClass:"token attr-value"},[_c(\'span\',{staticClass:"token punctuation"},[_vm._v("=")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("\\"")]),_vm._v("resize-bottom resize-right"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("\\"")])]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(">")])]),_c(\'span\',{staticClass:"token tag"},[_c(\'span\',{staticClass:"token tag"},[_c(\'span\',{staticClass:"token punctuation"},[_vm._v("</")]),_vm._v("div")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(">")])]),_vm._v("\\n"),_c(\'span\',{staticClass:"token tag"},[_c(\'span\',{staticClass:"token tag"},[_c(\'span\',{staticClass:"token punctuation"},[_vm._v("</")]),_vm._v("div")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(">")])]),_vm._v("\\n")])]),_vm._v(" "),_c(\'pre\',[_c(\'code\',{staticClass:"language-js"},[_c(\'span\',{staticClass:"token function"},[_vm._v("interact")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("(")]),_c(\'span\',{staticClass:"token string"},[_vm._v("\'.resizable\'")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(")")]),_vm._v("\\n  "),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(".")]),_c(\'span\',{staticClass:"token function"},[_vm._v("resizable")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("(")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("{")]),_vm._v("\\n    edges"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(":")]),_vm._v(" "),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("{")]),_vm._v("\\n      top   "),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(":")]),_vm._v(" "),_c(\'span\',{staticClass:"token string"},[_vm._v("\'.resize-top\'")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(",")]),_vm._v("\\n      left  "),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(":")]),_vm._v(" "),_c(\'span\',{staticClass:"token string"},[_vm._v("\'.resize-left\'")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(",")]),_vm._v("\\n      bottom"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(":")]),_vm._v(" "),_c(\'span\',{staticClass:"token string"},[_vm._v("\'.resize-bottom\'")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(",")]),_vm._v("\\n      right "),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(":")]),_vm._v(" "),_c(\'span\',{staticClass:"token string"},[_vm._v("\'.resize-right\'")]),_vm._v("\\n    "),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("}")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(",")]),_vm._v("\\n  "),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("}")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(")")]),_vm._v("\\n  "),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(".")]),_c(\'span\',{staticClass:"token function"},[_vm._v("on")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("(")]),_c(\'span\',{staticClass:"token string"},[_vm._v("\'resizemove\'")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(",")]),_vm._v(" "),_c(\'span\',{staticClass:"token parameter"},[_vm._v("event")]),_vm._v(" "),_c(\'span\',{staticClass:"token operator"},[_vm._v("=>")]),_vm._v(" "),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("{")]),_vm._v("\\n    "),_c(\'span\',{staticClass:"token keyword"},[_vm._v("let")]),_vm._v(" "),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("{")]),_vm._v(" x"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(",")]),_vm._v(" y "),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("}")]),_vm._v(" "),_c(\'span\',{staticClass:"token operator"},[_vm._v("=")]),_vm._v(" event"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(".")]),_vm._v("target"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(".")]),_vm._v("dataset\\n\\n    x "),_c(\'span\',{staticClass:"token operator"},[_vm._v("=")]),_vm._v(" "),_c(\'span\',{staticClass:"token function"},[_vm._v("parseFloat")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("(")]),_vm._v("x"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(")")]),_vm._v(" "),_c(\'span\',{staticClass:"token operator"},[_vm._v("||")]),_vm._v(" "),_c(\'span\',{staticClass:"token number"},[_vm._v("0")]),_vm._v("\\n    y "),_c(\'span\',{staticClass:"token operator"},[_vm._v("=")]),_vm._v(" "),_c(\'span\',{staticClass:"token function"},[_vm._v("parseFloat")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("(")]),_vm._v("y"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(")")]),_vm._v(" "),_c(\'span\',{staticClass:"token operator"},[_vm._v("||")]),_vm._v(" "),_c(\'span\',{staticClass:"token number"},[_vm._v("0")]),_vm._v("\\n\\n    Object"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(".")]),_c(\'span\',{staticClass:"token function"},[_vm._v("assign")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("(")]),_vm._v("event"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(".")]),_vm._v("target"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(".")]),_vm._v("style"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(",")]),_vm._v(" "),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("{")]),_vm._v("\\n      width"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(":")]),_vm._v(" "),_c(\'span\',{staticClass:"token template-string"},[_c(\'span\',{staticClass:"token string"},[_vm._v("`")]),_c(\'span\',{staticClass:"token interpolation"},[_c(\'span\',{staticClass:"token interpolation-punctuation punctuation"},[_vm._v("${")]),_vm._v("event"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(".")]),_vm._v("rect"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(".")]),_vm._v("width"),_c(\'span\',{staticClass:"token interpolation-punctuation punctuation"},[_vm._v("}")])]),_c(\'span\',{staticClass:"token string"},[_vm._v("px`")])]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(",")]),_vm._v("\\n      height"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(":")]),_vm._v(" "),_c(\'span\',{staticClass:"token template-string"},[_c(\'span\',{staticClass:"token string"},[_vm._v("`")]),_c(\'span\',{staticClass:"token interpolation"},[_c(\'span\',{staticClass:"token interpolation-punctuation punctuation"},[_vm._v("${")]),_vm._v("event"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(".")]),_vm._v("rect"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(".")]),_vm._v("height"),_c(\'span\',{staticClass:"token interpolation-punctuation punctuation"},[_vm._v("}")])]),_c(\'span\',{staticClass:"token string"},[_vm._v("px`")])]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(",")]),_vm._v("\\n      transform"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(":")]),_vm._v(" "),_c(\'span\',{staticClass:"token template-string"},[_c(\'span\',{staticClass:"token string"},[_vm._v("`translate(")]),_c(\'span\',{staticClass:"token interpolation"},[_c(\'span\',{staticClass:"token interpolation-punctuation punctuation"},[_vm._v("${")]),_vm._v("event"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(".")]),_vm._v("deltaRect"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(".")]),_vm._v("left"),_c(\'span\',{staticClass:"token interpolation-punctuation punctuation"},[_vm._v("}")])]),_c(\'span\',{staticClass:"token string"},[_vm._v("px, ")]),_c(\'span\',{staticClass:"token interpolation"},[_c(\'span\',{staticClass:"token interpolation-punctuation punctuation"},[_vm._v("${")]),_vm._v("event"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(".")]),_vm._v("deltaRect"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(".")]),_vm._v("top"),_c(\'span\',{staticClass:"token interpolation-punctuation punctuation"},[_vm._v("}")])]),_c(\'span\',{staticClass:"token string"},[_vm._v("px)`")])]),_vm._v("\\n    "),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("}")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(")")]),_vm._v("\\n\\n    Object"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(".")]),_c(\'span\',{staticClass:"token function"},[_vm._v("assign")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("(")]),_vm._v("event"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(".")]),_vm._v("target"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(".")]),_vm._v("dataset"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(",")]),_vm._v(" "),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("{")]),_vm._v(" x"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(",")]),_vm._v(" y "),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("}")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(")")]),_vm._v("\\n  "),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("}")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(")")]),_vm._v("\\n")])]),_vm._v(" "),_c(\'p\',[_vm._v("If you\'d like an element to behave as a resize corner, let it match the\\nselectors of two adjacent edges.")]),_vm._v(" "),_c(\'p\',[_vm._v("Resize handle elements must be children of the resizable element. If you need\\nthe handles to be outside the target element, then you will need to use\\n"),_c(\'a\',{attrs:{"href":"interaction-start"}},[_c(\'code\',{pre:true},[_vm._v("Interaction#start")])]),_vm._v(".")]),_vm._v(" "),_c(\'h2\',{staticClass:"title is-3",attrs:{"id":"invert"}},[_c(\'a\',{staticClass:"header-anchor",attrs:{"href":"#invert","aria-hidden":"true"}}),_vm._v(" "),_c(\'code\',{pre:true},[_vm._v("invert")])]),_vm._v(" "),_c(\'pre\',[_c(\'code\',{staticClass:"language-javascript"},[_c(\'span\',{staticClass:"token function"},[_vm._v("interact")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("(")]),_vm._v("target"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(")")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(".")]),_c(\'span\',{staticClass:"token function"},[_vm._v("resizable")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("(")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("{")]),_vm._v("\\n  edges"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(":")]),_vm._v(" "),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("{")]),_vm._v(" bottom"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(":")]),_vm._v(" "),_c(\'span\',{staticClass:"token boolean"},[_vm._v("true")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(",")]),_vm._v(" right"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(":")]),_vm._v(" "),_c(\'span\',{staticClass:"token boolean"},[_vm._v("true")]),_vm._v(" "),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("}")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(",")]),_vm._v("\\n  invert"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(":")]),_vm._v(" "),_c(\'span\',{staticClass:"token string"},[_vm._v("\'reposition\'")]),_vm._v("\\n"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("}")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(")")]),_vm._v("\\n")])]),_vm._v(" "),_c(\'p\',[_vm._v("By default, resize actions can\'t make the "),_c(\'code\',{pre:true},[_vm._v("event.rect")]),_vm._v(" smaller than "),_c(\'code\',{pre:true},[_vm._v("0x0")]),_vm._v(". Use\\nthe "),_c(\'code\',{pre:true},[_vm._v("invert")]),_vm._v(" option to specify what should happen if the target would be resized\\nto dimensions less than "),_c(\'code\',{pre:true},[_vm._v("0x0")]),_vm._v(". The possible values are:")]),_vm._v(" "),_c(\'ul\',[_c(\'li\',[_c(\'code\',{pre:true},[_vm._v("\'none\'")]),_vm._v(" (default) will limit the resize rect to a minimum of "),_c(\'code\',{pre:true},[_vm._v("0x0")])]),_vm._v(" "),_c(\'li\',[_c(\'code\',{pre:true},[_vm._v("\'negate\'")]),_vm._v(" will allow the rect to have negative width/height")]),_vm._v(" "),_c(\'li\',[_c(\'code\',{pre:true},[_vm._v("\'reposition\'")]),_vm._v(" will keep the width/height positive by swapping the top and\\nbottom edges and/or swapping the left and right edges")])]),_vm._v(" "),_c(\'p\',[_c(\'a\',{attrs:{"href":"http://codepen.io/taye/pen/LEpmOL"}},[_vm._v("Demo on Codepen")])])]) }]',component:{data:function(){return{templateRender:null}},render:function(t){return this.templateRender?this.templateRender():t("div","Rendering")},created:function(){this.templateRender=function(){var t=this,n=t.$createElement;t._self._c;return t._m(0)},this.$options.staticRenderFns=[function(){var t=this,n=t.$createElement,s=t._self._c||n;return s("div",{staticClass:"frontmatter-markdown"},[s("h1",{staticClass:"title is-2",attrs:{id:"resizable"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#resizable","aria-hidden":"true"}}),t._v(" Resizable")]),t._v(" "),s("pre",[s("code",{staticClass:"language-javascript"},[s("span",{staticClass:"token function"},[t._v("interact")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("target"),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n  "),s("span",{staticClass:"token punctuation"},[t._v(".")]),s("span",{staticClass:"token function"},[t._v("resizable")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n    edges"),s("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),s("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n      top   "),s("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),s("span",{staticClass:"token boolean"},[t._v("true")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v("       "),s("span",{staticClass:"token comment"},[t._v("// Use pointer coords to check for resize.")]),t._v("\n      left  "),s("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),s("span",{staticClass:"token boolean"},[t._v("false")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v("      "),s("span",{staticClass:"token comment"},[t._v("// Disable resizing from left edge.")]),t._v("\n      bottom"),s("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),s("span",{staticClass:"token string"},[t._v("'.resize-s'")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),s("span",{staticClass:"token comment"},[t._v("// Resize if pointer target matches selector")]),t._v("\n      right "),s("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" handleEl    "),s("span",{staticClass:"token comment"},[t._v("// Resize if pointer target is the given Element")]),t._v("\n    "),s("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n  "),s("span",{staticClass:"token punctuation"},[t._v("}")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n")])]),t._v(" "),s("p",[t._v("Resize events have "),s("code",{pre:!0},[t._v("rect")]),t._v(" and "),s("code",{pre:!0},[t._v("deltaRect")]),t._v(" properties. "),s("code",{pre:!0},[t._v("rect")]),t._v(" is updated on each\n"),s("code",{pre:!0},[t._v("resizemove")]),t._v(" event and the values in "),s("code",{pre:!0},[t._v("deltaRect")]),t._v(" reflect the changes. In\n"),s("code",{pre:!0},[t._v("resizestart")]),t._v(", "),s("code",{pre:!0},[t._v("rect")]),t._v(" will be identical to the rect returned by\n"),s("code",{pre:!0},[t._v("interactable.getRect(element)")]),t._v(" and "),s("code",{pre:!0},[t._v("deltaRect")]),t._v(" will have all-zero properties.")]),t._v(" "),s("table",{staticClass:"table is-bordered"},[s("thead",[s("tr",[s("th",[t._v("Resize Event property")]),t._v(" "),s("th",[t._v("Description")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("code",{pre:!0},[t._v("edges")])]),t._v(" "),s("td",[t._v("The edges of the element that are being changed")])]),t._v(" "),s("tr",[s("td",[s("code",{pre:!0},[t._v("rect")])]),t._v(" "),s("td",[t._v("An object with the new dimensions of the target")])]),t._v(" "),s("tr",[s("td",[s("code",{pre:!0},[t._v("deltaRect")])]),t._v(" "),s("td",[t._v("The change in dimensions since the previous event")])])])]),t._v(" "),s("p",[t._v("Resizable options have an "),s("code",{pre:!0},[t._v("edges")]),t._v(" property which specifies the edges of the\nelement which can be resized from (top, left, bottom or right).")]),t._v(" "),s("aside",{staticClass:"notice"},[t._v("\nRemember to use CSS `touch-action: none` to prevent the browser from panning\nwhen the user drags with a touch pointer, and `user-select: none` to disable\ntext selection.\n")]),t._v(" "),s("pre",[s("code",{staticClass:"language-html"},[s("span",{staticClass:"token tag"},[s("span",{staticClass:"token tag"},[s("span",{staticClass:"token punctuation"},[t._v("<")]),t._v("div")]),t._v(" "),s("span",{staticClass:"token attr-name"},[t._v("data-x")]),s("span",{staticClass:"token attr-value"},[s("span",{staticClass:"token punctuation"},[t._v("=")]),t._v("0")]),t._v(" "),s("span",{staticClass:"token attr-name"},[t._v("data-y")]),s("span",{staticClass:"token attr-value"},[s("span",{staticClass:"token punctuation"},[t._v("=")]),t._v("0")]),t._v(" "),s("span",{staticClass:"token attr-name"},[t._v("class")]),s("span",{staticClass:"token attr-value"},[s("span",{staticClass:"token punctuation"},[t._v("=")]),s("span",{staticClass:"token punctuation"},[t._v('"')]),t._v("resizable"),s("span",{staticClass:"token punctuation"},[t._v('"')])]),s("span",{staticClass:"token punctuation"},[t._v(">")])]),t._v("\n  "),s("span",{staticClass:"token comment"},[t._v("\x3c!-- top-left resize handle --\x3e")]),t._v("\n  "),s("span",{staticClass:"token tag"},[s("span",{staticClass:"token tag"},[s("span",{staticClass:"token punctuation"},[t._v("<")]),t._v("div")]),t._v(" "),s("span",{staticClass:"token attr-name"},[t._v("class")]),s("span",{staticClass:"token attr-value"},[s("span",{staticClass:"token punctuation"},[t._v("=")]),s("span",{staticClass:"token punctuation"},[t._v('"')]),t._v("resize-top resize-left"),s("span",{staticClass:"token punctuation"},[t._v('"')])]),s("span",{staticClass:"token punctuation"},[t._v(">")])]),s("span",{staticClass:"token tag"},[s("span",{staticClass:"token tag"},[s("span",{staticClass:"token punctuation"},[t._v("</")]),t._v("div")]),s("span",{staticClass:"token punctuation"},[t._v(">")])]),t._v("\n\n  "),s("span",{staticClass:"token comment"},[t._v("\x3c!-- bottom-right resize handle --\x3e")]),t._v("\n  "),s("span",{staticClass:"token tag"},[s("span",{staticClass:"token tag"},[s("span",{staticClass:"token punctuation"},[t._v("<")]),t._v("div")]),t._v(" "),s("span",{staticClass:"token attr-name"},[t._v("class")]),s("span",{staticClass:"token attr-value"},[s("span",{staticClass:"token punctuation"},[t._v("=")]),s("span",{staticClass:"token punctuation"},[t._v('"')]),t._v("resize-bottom resize-right"),s("span",{staticClass:"token punctuation"},[t._v('"')])]),s("span",{staticClass:"token punctuation"},[t._v(">")])]),s("span",{staticClass:"token tag"},[s("span",{staticClass:"token tag"},[s("span",{staticClass:"token punctuation"},[t._v("</")]),t._v("div")]),s("span",{staticClass:"token punctuation"},[t._v(">")])]),t._v("\n"),s("span",{staticClass:"token tag"},[s("span",{staticClass:"token tag"},[s("span",{staticClass:"token punctuation"},[t._v("</")]),t._v("div")]),s("span",{staticClass:"token punctuation"},[t._v(">")])]),t._v("\n")])]),t._v(" "),s("pre",[s("code",{staticClass:"language-js"},[s("span",{staticClass:"token function"},[t._v("interact")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v("'.resizable'")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n  "),s("span",{staticClass:"token punctuation"},[t._v(".")]),s("span",{staticClass:"token function"},[t._v("resizable")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n    edges"),s("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),s("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n      top   "),s("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),s("span",{staticClass:"token string"},[t._v("'.resize-top'")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v("\n      left  "),s("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),s("span",{staticClass:"token string"},[t._v("'.resize-left'")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v("\n      bottom"),s("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),s("span",{staticClass:"token string"},[t._v("'.resize-bottom'")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v("\n      right "),s("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),s("span",{staticClass:"token string"},[t._v("'.resize-right'")]),t._v("\n    "),s("span",{staticClass:"token punctuation"},[t._v("}")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v("\n  "),s("span",{staticClass:"token punctuation"},[t._v("}")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n  "),s("span",{staticClass:"token punctuation"},[t._v(".")]),s("span",{staticClass:"token function"},[t._v("on")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v("'resizemove'")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token parameter"},[t._v("event")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=>")]),t._v(" "),s("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n    "),s("span",{staticClass:"token keyword"},[t._v("let")]),t._v(" "),s("span",{staticClass:"token punctuation"},[t._v("{")]),t._v(" x"),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" y "),s("span",{staticClass:"token punctuation"},[t._v("}")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" event"),s("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("target"),s("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("dataset\n\n    x "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token function"},[t._v("parseFloat")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("x"),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("||")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("0")]),t._v("\n    y "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token function"},[t._v("parseFloat")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("y"),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("||")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("0")]),t._v("\n\n    Object"),s("span",{staticClass:"token punctuation"},[t._v(".")]),s("span",{staticClass:"token function"},[t._v("assign")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("event"),s("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("target"),s("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("style"),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n      width"),s("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),s("span",{staticClass:"token template-string"},[s("span",{staticClass:"token string"},[t._v("`")]),s("span",{staticClass:"token interpolation"},[s("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("${")]),t._v("event"),s("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("rect"),s("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("width"),s("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("}")])]),s("span",{staticClass:"token string"},[t._v("px`")])]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v("\n      height"),s("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),s("span",{staticClass:"token template-string"},[s("span",{staticClass:"token string"},[t._v("`")]),s("span",{staticClass:"token interpolation"},[s("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("${")]),t._v("event"),s("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("rect"),s("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("height"),s("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("}")])]),s("span",{staticClass:"token string"},[t._v("px`")])]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v("\n      transform"),s("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),s("span",{staticClass:"token template-string"},[s("span",{staticClass:"token string"},[t._v("`translate(")]),s("span",{staticClass:"token interpolation"},[s("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("${")]),t._v("event"),s("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("deltaRect"),s("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("left"),s("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("}")])]),s("span",{staticClass:"token string"},[t._v("px, ")]),s("span",{staticClass:"token interpolation"},[s("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("${")]),t._v("event"),s("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("deltaRect"),s("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("top"),s("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("}")])]),s("span",{staticClass:"token string"},[t._v("px)`")])]),t._v("\n    "),s("span",{staticClass:"token punctuation"},[t._v("}")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n\n    Object"),s("span",{staticClass:"token punctuation"},[t._v(".")]),s("span",{staticClass:"token function"},[t._v("assign")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("event"),s("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("target"),s("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("dataset"),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token punctuation"},[t._v("{")]),t._v(" x"),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" y "),s("span",{staticClass:"token punctuation"},[t._v("}")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n  "),s("span",{staticClass:"token punctuation"},[t._v("}")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n")])]),t._v(" "),s("p",[t._v("If you'd like an element to behave as a resize corner, let it match the\nselectors of two adjacent edges.")]),t._v(" "),s("p",[t._v("Resize handle elements must be children of the resizable element. If you need\nthe handles to be outside the target element, then you will need to use\n"),s("a",{attrs:{href:"interaction-start"}},[s("code",{pre:!0},[t._v("Interaction#start")])]),t._v(".")]),t._v(" "),s("h2",{staticClass:"title is-3",attrs:{id:"invert"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#invert","aria-hidden":"true"}}),t._v(" "),s("code",{pre:!0},[t._v("invert")])]),t._v(" "),s("pre",[s("code",{staticClass:"language-javascript"},[s("span",{staticClass:"token function"},[t._v("interact")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("target"),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(".")]),s("span",{staticClass:"token function"},[t._v("resizable")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n  edges"),s("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),s("span",{staticClass:"token punctuation"},[t._v("{")]),t._v(" bottom"),s("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),s("span",{staticClass:"token boolean"},[t._v("true")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" right"),s("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),s("span",{staticClass:"token boolean"},[t._v("true")]),t._v(" "),s("span",{staticClass:"token punctuation"},[t._v("}")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v("\n  invert"),s("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),s("span",{staticClass:"token string"},[t._v("'reposition'")]),t._v("\n"),s("span",{staticClass:"token punctuation"},[t._v("}")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n")])]),t._v(" "),s("p",[t._v("By default, resize actions can't make the "),s("code",{pre:!0},[t._v("event.rect")]),t._v(" smaller than "),s("code",{pre:!0},[t._v("0x0")]),t._v(". Use\nthe "),s("code",{pre:!0},[t._v("invert")]),t._v(" option to specify what should happen if the target would be resized\nto dimensions less than "),s("code",{pre:!0},[t._v("0x0")]),t._v(". The possible values are:")]),t._v(" "),s("ul",[s("li",[s("code",{pre:!0},[t._v("'none'")]),t._v(" (default) will limit the resize rect to a minimum of "),s("code",{pre:!0},[t._v("0x0")])]),t._v(" "),s("li",[s("code",{pre:!0},[t._v("'negate'")]),t._v(" will allow the rect to have negative width/height")]),t._v(" "),s("li",[s("code",{pre:!0},[t._v("'reposition'")]),t._v(" will keep the width/height positive by swapping the top and\nbottom edges and/or swapping the left and right edges")])]),t._v(" "),s("p",[s("a",{attrs:{href:"http://codepen.io/taye/pen/LEpmOL"}},[t._v("Demo on Codepen")])])])}]}}}}}}]);
//# sourceMappingURL=chunk-2d2134e9.fbd23b79.js.map