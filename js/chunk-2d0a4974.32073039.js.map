{"version":3,"sources":["webpack:///./src/docs/api/-_core_interactablePreventDefault.ts.html"],"names":["module","exports"],"mappings":"mGAAAA,EAAAC,QAAA","file":"js/chunk-2d0a4974.32073039.js","sourcesContent":["module.exports = \"<nav class=\\\"jsdoc-nav\\\">\\n<li class=\\\"nav-link nav-home-link\\\"><a href=\\\"/docs/api/index.html\\\">Home</a></li><li class=\\\"nav-heading\\\">Classes</li><li class=\\\"nav-heading\\\"><span class=\\\"nav-item-type type-class\\\">C</span><span class=\\\"nav-item-name\\\"><a href=\\\"DropEvent.html\\\">DropEvent</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"DropEvent.html#reject\\\">reject</a></span></li><li class=\\\"nav-heading\\\"><span class=\\\"nav-item-type type-class\\\">C</span><span class=\\\"nav-item-name\\\"><a href=\\\"Interactable.html\\\">Interactable</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"Interactable.html#context\\\">context</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"Interactable.html#deltaSource\\\">deltaSource</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"Interactable.html#draggable\\\">draggable</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"Interactable.html#dropCheck\\\">dropCheck</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"Interactable.html#dropzone\\\">dropzone</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"Interactable.html#fire\\\">fire</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"Interactable.html#gesturable\\\">gesturable</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"Interactable.html#getRect\\\">getRect</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"Interactable.html#off\\\">off</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"Interactable.html#on\\\">on</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"Interactable.html#origin\\\">origin</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"Interactable.html#rectChecker\\\">rectChecker</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"Interactable.html#reflow\\\">reflow</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"Interactable.html#resizable\\\">resizable</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"Interactable.html#set\\\">set</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"Interactable.html#unset\\\">unset</a></span></li><li class=\\\"nav-heading\\\"><span class=\\\"nav-item-type type-class\\\">C</span><span class=\\\"nav-item-name\\\"><a href=\\\"InteractEvent_InteractEvent.html\\\">InteractEvent</a></span></li><li class=\\\"nav-heading\\\"><span class=\\\"nav-item-type type-class\\\">C</span><span class=\\\"nav-item-name\\\"><a href=\\\"module.exports.html\\\">exports</a></span></li><li class=\\\"nav-heading\\\">Modules</li><li class=\\\"nav-heading\\\"><span class=\\\"nav-item-type type-module\\\">M</span><span class=\\\"nav-item-name\\\"><a href=\\\"module-interact.html\\\">interact</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"module-interact.html#.maxInteractions\\\">maxInteractions</a></span></li><li class=\\\"nav-heading\\\"><span class=\\\"nav-item-type type-module\\\">M</span><span class=\\\"nav-item-name\\\"><a href=\\\"module-modifiers_snapEdges.html\\\">modifiers/snapEdges</a></span></li><li class=\\\"nav-heading\\\"><a href=\\\"global.html\\\">Globals</a></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-member\\\">M</span><span class=\\\"nav-item-name\\\"><a href=\\\"global.html#interact\\\">interact</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"global.html#preventDefault\\\">preventDefault</a></span></li>\\n</nav>\\n\\n\\n<h1 class=\\\"page-title\\\">/core/interactablePreventDefault.ts</h1>\\n\\n\\n\\n\\n\\n\\n    \\n    <section>\\n        <article>\\n            <pre class=\\\"prettyprint source linenums\\\"><code>import { matchesSelector, nodeContains } from '@interactjs/utils/domUtils'\\nimport events from '@interactjs/utils/events'\\nimport * as is from '@interactjs/utils/is'\\nimport { getWindow } from '@interactjs/utils/window'\\n\\nfunction preventDefault (interactable, newValue) {\\n  if (/^(always|never|auto)$/.test(newValue)) {\\n    interactable.options.preventDefault = newValue\\n    return interactable\\n  }\\n\\n  if (is.bool(newValue)) {\\n    interactable.options.preventDefault = newValue ? 'always' : 'never'\\n    return interactable\\n  }\\n\\n  return interactable.options.preventDefault\\n}\\n\\nfunction checkAndPreventDefault (interactable, scope, event) {\\n  const setting = interactable.options.preventDefault\\n\\n  if (setting === 'never') { return }\\n\\n  if (setting === 'always') {\\n    event.preventDefault()\\n    return\\n  }\\n\\n  // setting === 'auto'\\n\\n  // if the browser supports passive event listeners and isn't running on iOS,\\n  // don't preventDefault of touch{start,move} events. CSS touch-action and\\n  // user-select should be used instead of calling event.preventDefault().\\n  if (events.supportsPassive &amp;&amp; /^touch(start|move)$/.test(event.type)) {\\n    const doc = getWindow(event.target).document\\n    const docOptions = scope.getDocOptions(doc)\\n\\n    if (!(docOptions &amp;&amp; docOptions.events) || docOptions.events.passive !== false) {\\n      return\\n    }\\n  }\\n\\n  // don't preventDefault of pointerdown events\\n  if (/^(mouse|pointer|touch)*(down|start)/i.test(event.type)) {\\n    return\\n  }\\n\\n  // don't preventDefault on editable elements\\n  if (is.element(event.target) &amp;&amp;\\n      matchesSelector(event.target, 'input,select,textarea,[contenteditable=true],[contenteditable=true] *')) {\\n    return\\n  }\\n\\n  event.preventDefault()\\n}\\n\\nfunction onInteractionEvent ({ interaction, event }) {\\n  if (interaction.interactable) {\\n    interaction.interactable.checkAndPreventDefault(event)\\n  }\\n}\\n\\nexport function install (scope) {\\n  /** @lends Interactable */\\n  const Interactable = scope.Interactable\\n\\n  /**\\n   * Returns or sets whether to prevent the browser's default behaviour in\\n   * response to pointer events. Can be set to:\\n   *  - `'always'` to always prevent\\n   *  - `'never'` to never prevent\\n   *  - `'auto'` to let interact.js try to determine what would be best\\n   *\\n   * @param {string} [newValue] `'always'`, `'never'` or `'auto'`\\n   * @return {string | Interactable} The current setting or this Interactable\\n   */\\n  Interactable.prototype.preventDefault = function (newValue) {\\n    return preventDefault(this, newValue)\\n  }\\n\\n  Interactable.prototype.checkAndPreventDefault = function (event) {\\n    return checkAndPreventDefault(this, scope, event)\\n  }\\n\\n  for (const eventSignal of ['down', 'move', 'up', 'cancel']) {\\n    scope.interactions.signals.on(eventSignal, onInteractionEvent)\\n  }\\n\\n  // prevent native HTML5 drag on interact.js target elements\\n  scope.interactions.eventMap.dragstart = function preventNativeDrag (event) {\\n    for (const interaction of scope.interactions.list) {\\n      if (interaction.element &amp;&amp;\\n        (interaction.element === event.target ||\\n          nodeContains(interaction.element, event.target))) {\\n        interaction.interactable.checkAndPreventDefault(event)\\n        return\\n      }\\n    }\\n  }\\n}\\n\\nexport type Install = typeof install\\n\\nexport default {\\n  id: 'core/interactablePreventDefault',\\n  install,\\n}\\n</code></pre>\\n        </article>\\n    </section>\\n\\n\\n\\n\\n\";"],"sourceRoot":""}