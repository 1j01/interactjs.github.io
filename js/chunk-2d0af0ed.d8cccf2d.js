(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0af0ed"],{"0d69":function(t,n){t.exports={body:"Draggable\n=========\n\n```html\n<div class=\"draggable\"> Draggable Element </div>\n```\n\n```css\n.draggable {\n  touch-action: none;\n  user-select: none;\n}\n```\n\n```js\nconst position = { x: 0, y: 0 }\n\ninteract('.draggable').draggable({\n  listeners: {\n    start (event) {\n      console.log(event.type, event.target)\n    },\n    move (event) {\n      position.x += event.dx\n      position.y += event.dy\n\n      event.target.style.transform =\n        `transform(${position.x}, ${position.y})`\n    },\n  }\n})\n```\n\nDragging is the simplest action interactj.s provides. To make an element\ndraggable, create an interactable with your desired target then call the\n`draggable` method with the options that you need. In adition to the common\n`InteractEvent` properties, `dragmove` events also have:\n\n| `dragmove` property     | Description                                       |\n| ----------------------- | --------------------------------------------------|\n| `dragEnter`             | The dropzone this Interactable was dragged over   |\n| `dragLeave`             | The dropzone this Interactable was dragged out of |\n\n<aside class=\"notice\">\nRemember to use CSS `touch-action: none` to prevent the browser from panning\nwhen the user drags with a touch pointer, and `user-select: none` to disable\ntext selection.\n</aside>\n\n`lockAxis` and `startAxis`\n--------------------------\n\n```javascript\n// lock the drag to the starting direction\ninteract(singleAxisTarget).draggable({\n  startAxis: 'xy'\n  lockAxis: 'start'\n});\n\n// only drag if the drag was started horizontally\ninteract(horizontalTarget).draggable({\n  startAxis: 'x'\n  lockAxis: 'x'\n});\n```\n\nThere are two options for controlling the axis of drag actions: `startAxis` and\n`lockAxis`.\n\n`startAxis` sets the direction that the initial movement must be in for the\naction to start. Use `'x'` to require the user to start dragging horizontally or\n`'y'` to start dragging vertically.\n\n`lockAxis` causes the drag events to change only in the given axis. If a value\nof `'start'` is used, then the drag will be locked to the starting direction.\n",html:'<h1 id="draggable" class="title is-2"><a class="header-anchor" href="#draggable" aria-hidden="true"></a> Draggable</h1>\n<pre><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>draggable<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> Draggable Element <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n</code></pre>\n<pre><code class="language-css"><span class="token selector">.draggable</span> <span class="token punctuation">{</span>\n  <span class="token property">touch-action</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>\n  <span class="token property">user-select</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<pre><code class="language-js"><span class="token keyword">const</span> position <span class="token operator">=</span> <span class="token punctuation">{</span> x<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span> <span class="token number">0</span> <span class="token punctuation">}</span>\n\n<span class="token function">interact</span><span class="token punctuation">(</span><span class="token string">\'.draggable\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">draggable</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  listeners<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    <span class="token function">start</span> <span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>type<span class="token punctuation">,</span> event<span class="token punctuation">.</span>target<span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function">move</span> <span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      position<span class="token punctuation">.</span>x <span class="token operator">+=</span> event<span class="token punctuation">.</span>dx\n      position<span class="token punctuation">.</span>y <span class="token operator">+=</span> event<span class="token punctuation">.</span>dy\n\n      event<span class="token punctuation">.</span>target<span class="token punctuation">.</span>style<span class="token punctuation">.</span>transform <span class="token operator">=</span>\n        <span class="token template-string"><span class="token string">`transform(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>position<span class="token punctuation">.</span>x<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">, </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>position<span class="token punctuation">.</span>y<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">)`</span></span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre>\n<p>Dragging is the simplest action interactj.s provides. To make an element\ndraggable, create an interactable with your desired target then call the\n<code>draggable</code> method with the options that you need. In adition to the common\n<code>InteractEvent</code> properties, <code>dragmove</code> events also have:</p>\n<table class="table is-bordered">\n<thead>\n<tr>\n<th><code>dragmove</code> property</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>dragEnter</code></td>\n<td>The dropzone this Interactable was dragged over</td>\n</tr>\n<tr>\n<td><code>dragLeave</code></td>\n<td>The dropzone this Interactable was dragged out of</td>\n</tr>\n</tbody>\n</table>\n<aside class="notice">\nRemember to use CSS `touch-action: none` to prevent the browser from panning\nwhen the user drags with a touch pointer, and `user-select: none` to disable\ntext selection.\n</aside>\n<h2 id="lockaxis-and-startaxis" class="title is-3"><a class="header-anchor" href="#lockaxis-and-startaxis" aria-hidden="true"></a> <code>lockAxis</code> and <code>startAxis</code></h2>\n<pre><code class="language-javascript"><span class="token comment">// lock the drag to the starting direction</span>\n<span class="token function">interact</span><span class="token punctuation">(</span>singleAxisTarget<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">draggable</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  startAxis<span class="token punctuation">:</span> <span class="token string">\'xy\'</span>\n  lockAxis<span class="token punctuation">:</span> <span class="token string">\'start\'</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// only drag if the drag was started horizontally</span>\n<span class="token function">interact</span><span class="token punctuation">(</span>horizontalTarget<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">draggable</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  startAxis<span class="token punctuation">:</span> <span class="token string">\'x\'</span>\n  lockAxis<span class="token punctuation">:</span> <span class="token string">\'x\'</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre>\n<p>There are two options for controlling the axis of drag actions: <code>startAxis</code> and\n<code>lockAxis</code>.</p>\n<p><code>startAxis</code> sets the direction that the initial movement must be in for the\naction to start. Use <code>\'x\'</code> to require the user to start dragging horizontally or\n<code>\'y\'</code> to start dragging vertically.</p>\n<p><code>lockAxis</code> causes the drag events to change only in the given axis. If a value\nof <code>\'start\'</code> is used, then the drag will be locked to the starting direction.</p>\n',attributes:{},vue:{render:"return function render() { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0) }",staticRenderFns:'return [function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'div\',{staticClass:"frontmatter-markdown"},[_c(\'h1\',{staticClass:"title is-2",attrs:{"id":"draggable"}},[_c(\'a\',{staticClass:"header-anchor",attrs:{"href":"#draggable","aria-hidden":"true"}}),_vm._v(" Draggable")]),_vm._v(" "),_c(\'pre\',[_c(\'code\',{staticClass:"language-html"},[_c(\'span\',{staticClass:"token tag"},[_c(\'span\',{staticClass:"token tag"},[_c(\'span\',{staticClass:"token punctuation"},[_vm._v("<")]),_vm._v("div")]),_vm._v(" "),_c(\'span\',{staticClass:"token attr-name"},[_vm._v("class")]),_c(\'span\',{staticClass:"token attr-value"},[_c(\'span\',{staticClass:"token punctuation"},[_vm._v("=")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("\\"")]),_vm._v("draggable"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("\\"")])]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(">")])]),_vm._v(" Draggable Element "),_c(\'span\',{staticClass:"token tag"},[_c(\'span\',{staticClass:"token tag"},[_c(\'span\',{staticClass:"token punctuation"},[_vm._v("</")]),_vm._v("div")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(">")])]),_vm._v("\\n")])]),_vm._v(" "),_c(\'pre\',[_c(\'code\',{staticClass:"language-css"},[_c(\'span\',{staticClass:"token selector"},[_vm._v(".draggable")]),_vm._v(" "),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("{")]),_vm._v("\\n  "),_c(\'span\',{staticClass:"token property"},[_vm._v("touch-action")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(":")]),_vm._v(" none"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(";")]),_vm._v("\\n  "),_c(\'span\',{staticClass:"token property"},[_vm._v("user-select")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(":")]),_vm._v(" none"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(";")]),_vm._v("\\n"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("}")]),_vm._v("\\n")])]),_vm._v(" "),_c(\'pre\',[_c(\'code\',{staticClass:"language-js"},[_c(\'span\',{staticClass:"token keyword"},[_vm._v("const")]),_vm._v(" position "),_c(\'span\',{staticClass:"token operator"},[_vm._v("=")]),_vm._v(" "),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("{")]),_vm._v(" x"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(":")]),_vm._v(" "),_c(\'span\',{staticClass:"token number"},[_vm._v("0")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(",")]),_vm._v(" y"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(":")]),_vm._v(" "),_c(\'span\',{staticClass:"token number"},[_vm._v("0")]),_vm._v(" "),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("}")]),_vm._v("\\n\\n"),_c(\'span\',{staticClass:"token function"},[_vm._v("interact")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("(")]),_c(\'span\',{staticClass:"token string"},[_vm._v("\'.draggable\'")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(")")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(".")]),_c(\'span\',{staticClass:"token function"},[_vm._v("draggable")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("(")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("{")]),_vm._v("\\n  listeners"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(":")]),_vm._v(" "),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("{")]),_vm._v("\\n    "),_c(\'span\',{staticClass:"token function"},[_vm._v("start")]),_vm._v(" "),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("(")]),_c(\'span\',{staticClass:"token parameter"},[_vm._v("event")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(")")]),_vm._v(" "),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("{")]),_vm._v("\\n      console"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(".")]),_c(\'span\',{staticClass:"token function"},[_vm._v("log")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("(")]),_vm._v("event"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(".")]),_vm._v("type"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(",")]),_vm._v(" event"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(".")]),_vm._v("target"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(")")]),_vm._v("\\n    "),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("}")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(",")]),_vm._v("\\n    "),_c(\'span\',{staticClass:"token function"},[_vm._v("move")]),_vm._v(" "),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("(")]),_c(\'span\',{staticClass:"token parameter"},[_vm._v("event")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(")")]),_vm._v(" "),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("{")]),_vm._v("\\n      position"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(".")]),_vm._v("x "),_c(\'span\',{staticClass:"token operator"},[_vm._v("+=")]),_vm._v(" event"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(".")]),_vm._v("dx\\n      position"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(".")]),_vm._v("y "),_c(\'span\',{staticClass:"token operator"},[_vm._v("+=")]),_vm._v(" event"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(".")]),_vm._v("dy\\n\\n      event"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(".")]),_vm._v("target"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(".")]),_vm._v("style"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(".")]),_vm._v("transform "),_c(\'span\',{staticClass:"token operator"},[_vm._v("=")]),_vm._v("\\n        "),_c(\'span\',{staticClass:"token template-string"},[_c(\'span\',{staticClass:"token string"},[_vm._v("`transform(")]),_c(\'span\',{staticClass:"token interpolation"},[_c(\'span\',{staticClass:"token interpolation-punctuation punctuation"},[_vm._v("${")]),_vm._v("position"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(".")]),_vm._v("x"),_c(\'span\',{staticClass:"token interpolation-punctuation punctuation"},[_vm._v("}")])]),_c(\'span\',{staticClass:"token string"},[_vm._v(", ")]),_c(\'span\',{staticClass:"token interpolation"},[_c(\'span\',{staticClass:"token interpolation-punctuation punctuation"},[_vm._v("${")]),_vm._v("position"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(".")]),_vm._v("y"),_c(\'span\',{staticClass:"token interpolation-punctuation punctuation"},[_vm._v("}")])]),_c(\'span\',{staticClass:"token string"},[_vm._v(")`")])]),_vm._v("\\n    "),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("}")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(",")]),_vm._v("\\n  "),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("}")]),_vm._v("\\n"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("}")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(")")]),_vm._v("\\n")])]),_vm._v(" "),_c(\'p\',[_vm._v("Dragging is the simplest action interactj.s provides. To make an element\\ndraggable, create an interactable with your desired target then call the\\n"),_c(\'code\',{pre:true},[_vm._v("draggable")]),_vm._v(" method with the options that you need. In adition to the common\\n"),_c(\'code\',{pre:true},[_vm._v("InteractEvent")]),_vm._v(" properties, "),_c(\'code\',{pre:true},[_vm._v("dragmove")]),_vm._v(" events also have:")]),_vm._v(" "),_c(\'table\',{staticClass:"table is-bordered"},[_c(\'thead\',[_c(\'tr\',[_c(\'th\',[_c(\'code\',{pre:true},[_vm._v("dragmove")]),_vm._v(" property")]),_vm._v(" "),_c(\'th\',[_vm._v("Description")])])]),_vm._v(" "),_c(\'tbody\',[_c(\'tr\',[_c(\'td\',[_c(\'code\',{pre:true},[_vm._v("dragEnter")])]),_vm._v(" "),_c(\'td\',[_vm._v("The dropzone this Interactable was dragged over")])]),_vm._v(" "),_c(\'tr\',[_c(\'td\',[_c(\'code\',{pre:true},[_vm._v("dragLeave")])]),_vm._v(" "),_c(\'td\',[_vm._v("The dropzone this Interactable was dragged out of")])])])]),_vm._v(" "),_c(\'aside\',{staticClass:"notice"},[_vm._v("\\nRemember to use CSS `touch-action: none` to prevent the browser from panning\\nwhen the user drags with a touch pointer, and `user-select: none` to disable\\ntext selection.\\n")]),_vm._v(" "),_c(\'h2\',{staticClass:"title is-3",attrs:{"id":"lockaxis-and-startaxis"}},[_c(\'a\',{staticClass:"header-anchor",attrs:{"href":"#lockaxis-and-startaxis","aria-hidden":"true"}}),_vm._v(" "),_c(\'code\',{pre:true},[_vm._v("lockAxis")]),_vm._v(" and "),_c(\'code\',{pre:true},[_vm._v("startAxis")])]),_vm._v(" "),_c(\'pre\',[_c(\'code\',{staticClass:"language-javascript"},[_c(\'span\',{staticClass:"token comment"},[_vm._v("// lock the drag to the starting direction")]),_vm._v("\\n"),_c(\'span\',{staticClass:"token function"},[_vm._v("interact")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("(")]),_vm._v("singleAxisTarget"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(")")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(".")]),_c(\'span\',{staticClass:"token function"},[_vm._v("draggable")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("(")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("{")]),_vm._v("\\n  startAxis"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(":")]),_vm._v(" "),_c(\'span\',{staticClass:"token string"},[_vm._v("\'xy\'")]),_vm._v("\\n  lockAxis"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(":")]),_vm._v(" "),_c(\'span\',{staticClass:"token string"},[_vm._v("\'start\'")]),_vm._v("\\n"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("}")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(")")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(";")]),_vm._v("\\n\\n"),_c(\'span\',{staticClass:"token comment"},[_vm._v("// only drag if the drag was started horizontally")]),_vm._v("\\n"),_c(\'span\',{staticClass:"token function"},[_vm._v("interact")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("(")]),_vm._v("horizontalTarget"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(")")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(".")]),_c(\'span\',{staticClass:"token function"},[_vm._v("draggable")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("(")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("{")]),_vm._v("\\n  startAxis"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(":")]),_vm._v(" "),_c(\'span\',{staticClass:"token string"},[_vm._v("\'x\'")]),_vm._v("\\n  lockAxis"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(":")]),_vm._v(" "),_c(\'span\',{staticClass:"token string"},[_vm._v("\'x\'")]),_vm._v("\\n"),_c(\'span\',{staticClass:"token punctuation"},[_vm._v("}")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(")")]),_c(\'span\',{staticClass:"token punctuation"},[_vm._v(";")]),_vm._v("\\n")])]),_vm._v(" "),_c(\'p\',[_vm._v("There are two options for controlling the axis of drag actions: "),_c(\'code\',{pre:true},[_vm._v("startAxis")]),_vm._v(" and\\n"),_c(\'code\',{pre:true},[_vm._v("lockAxis")]),_vm._v(".")]),_vm._v(" "),_c(\'p\',[_c(\'code\',{pre:true},[_vm._v("startAxis")]),_vm._v(" sets the direction that the initial movement must be in for the\\naction to start. Use "),_c(\'code\',{pre:true},[_vm._v("\'x\'")]),_vm._v(" to require the user to start dragging horizontally or\\n"),_c(\'code\',{pre:true},[_vm._v("\'y\'")]),_vm._v(" to start dragging vertically.")]),_vm._v(" "),_c(\'p\',[_c(\'code\',{pre:true},[_vm._v("lockAxis")]),_vm._v(" causes the drag events to change only in the given axis. If a value\\nof "),_c(\'code\',{pre:true},[_vm._v("\'start\'")]),_vm._v(" is used, then the drag will be locked to the starting direction.")])]) }]',component:{data:function(){return{templateRender:null}},render:function(t){return this.templateRender?this.templateRender():t("div","Rendering")},created:function(){this.templateRender=function(){var t=this,n=t.$createElement;t._self._c;return t._m(0)},this.$options.staticRenderFns=[function(){var t=this,n=t.$createElement,a=t._self._c||n;return a("div",{staticClass:"frontmatter-markdown"},[a("h1",{staticClass:"title is-2",attrs:{id:"draggable"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#draggable","aria-hidden":"true"}}),t._v(" Draggable")]),t._v(" "),a("pre",[a("code",{staticClass:"language-html"},[a("span",{staticClass:"token tag"},[a("span",{staticClass:"token tag"},[a("span",{staticClass:"token punctuation"},[t._v("<")]),t._v("div")]),t._v(" "),a("span",{staticClass:"token attr-name"},[t._v("class")]),a("span",{staticClass:"token attr-value"},[a("span",{staticClass:"token punctuation"},[t._v("=")]),a("span",{staticClass:"token punctuation"},[t._v('"')]),t._v("draggable"),a("span",{staticClass:"token punctuation"},[t._v('"')])]),a("span",{staticClass:"token punctuation"},[t._v(">")])]),t._v(" Draggable Element "),a("span",{staticClass:"token tag"},[a("span",{staticClass:"token tag"},[a("span",{staticClass:"token punctuation"},[t._v("</")]),t._v("div")]),a("span",{staticClass:"token punctuation"},[t._v(">")])]),t._v("\n")])]),t._v(" "),a("pre",[a("code",{staticClass:"language-css"},[a("span",{staticClass:"token selector"},[t._v(".draggable")]),t._v(" "),a("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n  "),a("span",{staticClass:"token property"},[t._v("touch-action")]),a("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" none"),a("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n  "),a("span",{staticClass:"token property"},[t._v("user-select")]),a("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" none"),a("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n"),a("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n")])]),t._v(" "),a("pre",[a("code",{staticClass:"language-js"},[a("span",{staticClass:"token keyword"},[t._v("const")]),t._v(" position "),a("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),a("span",{staticClass:"token punctuation"},[t._v("{")]),t._v(" x"),a("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),a("span",{staticClass:"token number"},[t._v("0")]),a("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" y"),a("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),a("span",{staticClass:"token number"},[t._v("0")]),t._v(" "),a("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n\n"),a("span",{staticClass:"token function"},[t._v("interact")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),a("span",{staticClass:"token string"},[t._v("'.draggable'")]),a("span",{staticClass:"token punctuation"},[t._v(")")]),a("span",{staticClass:"token punctuation"},[t._v(".")]),a("span",{staticClass:"token function"},[t._v("draggable")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),a("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n  listeners"),a("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),a("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n    "),a("span",{staticClass:"token function"},[t._v("start")]),t._v(" "),a("span",{staticClass:"token punctuation"},[t._v("(")]),a("span",{staticClass:"token parameter"},[t._v("event")]),a("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),a("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n      console"),a("span",{staticClass:"token punctuation"},[t._v(".")]),a("span",{staticClass:"token function"},[t._v("log")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("event"),a("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("type"),a("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" event"),a("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("target"),a("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n    "),a("span",{staticClass:"token punctuation"},[t._v("}")]),a("span",{staticClass:"token punctuation"},[t._v(",")]),t._v("\n    "),a("span",{staticClass:"token function"},[t._v("move")]),t._v(" "),a("span",{staticClass:"token punctuation"},[t._v("(")]),a("span",{staticClass:"token parameter"},[t._v("event")]),a("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),a("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n      position"),a("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("x "),a("span",{staticClass:"token operator"},[t._v("+=")]),t._v(" event"),a("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("dx\n      position"),a("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("y "),a("span",{staticClass:"token operator"},[t._v("+=")]),t._v(" event"),a("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("dy\n\n      event"),a("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("target"),a("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("style"),a("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("transform "),a("span",{staticClass:"token operator"},[t._v("=")]),t._v("\n        "),a("span",{staticClass:"token template-string"},[a("span",{staticClass:"token string"},[t._v("`transform(")]),a("span",{staticClass:"token interpolation"},[a("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("${")]),t._v("position"),a("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("x"),a("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("}")])]),a("span",{staticClass:"token string"},[t._v(", ")]),a("span",{staticClass:"token interpolation"},[a("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("${")]),t._v("position"),a("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("y"),a("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("}")])]),a("span",{staticClass:"token string"},[t._v(")`")])]),t._v("\n    "),a("span",{staticClass:"token punctuation"},[t._v("}")]),a("span",{staticClass:"token punctuation"},[t._v(",")]),t._v("\n  "),a("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n"),a("span",{staticClass:"token punctuation"},[t._v("}")]),a("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n")])]),t._v(" "),a("p",[t._v("Dragging is the simplest action interactj.s provides. To make an element\ndraggable, create an interactable with your desired target then call the\n"),a("code",{pre:!0},[t._v("draggable")]),t._v(" method with the options that you need. In adition to the common\n"),a("code",{pre:!0},[t._v("InteractEvent")]),t._v(" properties, "),a("code",{pre:!0},[t._v("dragmove")]),t._v(" events also have:")]),t._v(" "),a("table",{staticClass:"table is-bordered"},[a("thead",[a("tr",[a("th",[a("code",{pre:!0},[t._v("dragmove")]),t._v(" property")]),t._v(" "),a("th",[t._v("Description")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",{pre:!0},[t._v("dragEnter")])]),t._v(" "),a("td",[t._v("The dropzone this Interactable was dragged over")])]),t._v(" "),a("tr",[a("td",[a("code",{pre:!0},[t._v("dragLeave")])]),t._v(" "),a("td",[t._v("The dropzone this Interactable was dragged out of")])])])]),t._v(" "),a("aside",{staticClass:"notice"},[t._v("\nRemember to use CSS `touch-action: none` to prevent the browser from panning\nwhen the user drags with a touch pointer, and `user-select: none` to disable\ntext selection.\n")]),t._v(" "),a("h2",{staticClass:"title is-3",attrs:{id:"lockaxis-and-startaxis"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#lockaxis-and-startaxis","aria-hidden":"true"}}),t._v(" "),a("code",{pre:!0},[t._v("lockAxis")]),t._v(" and "),a("code",{pre:!0},[t._v("startAxis")])]),t._v(" "),a("pre",[a("code",{staticClass:"language-javascript"},[a("span",{staticClass:"token comment"},[t._v("// lock the drag to the starting direction")]),t._v("\n"),a("span",{staticClass:"token function"},[t._v("interact")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("singleAxisTarget"),a("span",{staticClass:"token punctuation"},[t._v(")")]),a("span",{staticClass:"token punctuation"},[t._v(".")]),a("span",{staticClass:"token function"},[t._v("draggable")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),a("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n  startAxis"),a("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),a("span",{staticClass:"token string"},[t._v("'xy'")]),t._v("\n  lockAxis"),a("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),a("span",{staticClass:"token string"},[t._v("'start'")]),t._v("\n"),a("span",{staticClass:"token punctuation"},[t._v("}")]),a("span",{staticClass:"token punctuation"},[t._v(")")]),a("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n"),a("span",{staticClass:"token comment"},[t._v("// only drag if the drag was started horizontally")]),t._v("\n"),a("span",{staticClass:"token function"},[t._v("interact")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("horizontalTarget"),a("span",{staticClass:"token punctuation"},[t._v(")")]),a("span",{staticClass:"token punctuation"},[t._v(".")]),a("span",{staticClass:"token function"},[t._v("draggable")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),a("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n  startAxis"),a("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),a("span",{staticClass:"token string"},[t._v("'x'")]),t._v("\n  lockAxis"),a("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),a("span",{staticClass:"token string"},[t._v("'x'")]),t._v("\n"),a("span",{staticClass:"token punctuation"},[t._v("}")]),a("span",{staticClass:"token punctuation"},[t._v(")")]),a("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n")])]),t._v(" "),a("p",[t._v("There are two options for controlling the axis of drag actions: "),a("code",{pre:!0},[t._v("startAxis")]),t._v(" and\n"),a("code",{pre:!0},[t._v("lockAxis")]),t._v(".")]),t._v(" "),a("p",[a("code",{pre:!0},[t._v("startAxis")]),t._v(" sets the direction that the initial movement must be in for the\naction to start. Use "),a("code",{pre:!0},[t._v("'x'")]),t._v(" to require the user to start dragging horizontally or\n"),a("code",{pre:!0},[t._v("'y'")]),t._v(" to start dragging vertically.")]),t._v(" "),a("p",[a("code",{pre:!0},[t._v("lockAxis")]),t._v(" causes the drag events to change only in the given axis. If a value\nof "),a("code",{pre:!0},[t._v("'start'")]),t._v(" is used, then the drag will be locked to the starting direction.")])])}]}}}}}}]);
//# sourceMappingURL=chunk-2d0af0ed.d8cccf2d.js.map