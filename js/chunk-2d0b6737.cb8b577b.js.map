{"version":3,"sources":["webpack:///./src/docs/reflow.md"],"names":["module","exports","body","html","attributes","vue","render","staticRenderFns","component","data","templateRender","createElement","this","created","_vm","_h","$createElement","_self","_c","_m","$options","staticClass","attrs","id","href","aria-hidden","_v","pre"],"mappings":"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","file":"js/chunk-2d0b6737.cb8b577b.js","sourcesContent":["module.exports = { \n    body: \"Reflow\\n======\\n\\n```js\\nconst interactable = interact(target)\\nconst drag = { name: drag, axis: 'x' }\\nconst resize = {\\n  name: resize,\\n  edges: { left: true, bottom: true }\\n}\\n\\ninteractable.reflow(drag)\\ninteractable.reflow(resize)\\n```\\n\\nThe reflow method lets you trigger an action start -> move -> end sequence which\\nruns modifiers and does drop calculations, etc. If your interactable target is a\\nCSS selector, an interaction will be run for each matching element. If the\\nelements have inertia, `endOnly` modifiers and `smoothEndDuration`, then the\\ninteractions may be run asyncroously. The reflow method returns a `Promise`\\nwhich is resolved when all interactions are complete.\\n\",\n    html: \"<h1 id=\\\"reflow\\\" class=\\\"title is-2\\\"><a class=\\\"header-anchor\\\" href=\\\"#reflow\\\" aria-hidden=\\\"true\\\"></a> Reflow</h1>\\n<pre><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">const</span> interactable <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">interact</span><span class=\\\"token punctuation\\\">(</span>target<span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token keyword\\\">const</span> drag <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span> name<span class=\\\"token punctuation\\\">:</span> drag<span class=\\\"token punctuation\\\">,</span> axis<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'x'</span> <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token keyword\\\">const</span> resize <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n  name<span class=\\\"token punctuation\\\">:</span> resize<span class=\\\"token punctuation\\\">,</span>\\n  edges<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span> left<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span> bottom<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span> <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\ninteractable<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">reflow</span><span class=\\\"token punctuation\\\">(</span>drag<span class=\\\"token punctuation\\\">)</span>\\ninteractable<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">reflow</span><span class=\\\"token punctuation\\\">(</span>resize<span class=\\\"token punctuation\\\">)</span>\\n</code></pre>\\n<p>The reflow method lets you trigger an action start -&gt; move -&gt; end sequence which\\nruns modifiers and does drop calculations, etc. If your interactable target is a\\nCSS selector, an interaction will be run for each matching element. If the\\nelements have inertia, <code>endOnly</code> modifiers and <code>smoothEndDuration</code>, then the\\ninteractions may be run asyncroously. The reflow method returns a <code>Promise</code>\\nwhich is resolved when all interactions are complete.</p>\\n\",\n    attributes: {},\n      vue: {\n        render: \"return function render() { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0) }\",\n        staticRenderFns: \"return [function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\\\"frontmatter-markdown\\\"},[_c('h1',{staticClass:\\\"title is-2\\\",attrs:{\\\"id\\\":\\\"reflow\\\"}},[_c('a',{staticClass:\\\"header-anchor\\\",attrs:{\\\"href\\\":\\\"#reflow\\\",\\\"aria-hidden\\\":\\\"true\\\"}}),_vm._v(\\\" Reflow\\\")]),_vm._v(\\\" \\\"),_c('pre',[_c('code',{staticClass:\\\"language-js\\\"},[_c('span',{staticClass:\\\"token keyword\\\"},[_vm._v(\\\"const\\\")]),_vm._v(\\\" interactable \\\"),_c('span',{staticClass:\\\"token operator\\\"},[_vm._v(\\\"=\\\")]),_vm._v(\\\" \\\"),_c('span',{staticClass:\\\"token function\\\"},[_vm._v(\\\"interact\\\")]),_c('span',{staticClass:\\\"token punctuation\\\"},[_vm._v(\\\"(\\\")]),_vm._v(\\\"target\\\"),_c('span',{staticClass:\\\"token punctuation\\\"},[_vm._v(\\\")\\\")]),_vm._v(\\\"\\\\n\\\"),_c('span',{staticClass:\\\"token keyword\\\"},[_vm._v(\\\"const\\\")]),_vm._v(\\\" drag \\\"),_c('span',{staticClass:\\\"token operator\\\"},[_vm._v(\\\"=\\\")]),_vm._v(\\\" \\\"),_c('span',{staticClass:\\\"token punctuation\\\"},[_vm._v(\\\"{\\\")]),_vm._v(\\\" name\\\"),_c('span',{staticClass:\\\"token punctuation\\\"},[_vm._v(\\\":\\\")]),_vm._v(\\\" drag\\\"),_c('span',{staticClass:\\\"token punctuation\\\"},[_vm._v(\\\",\\\")]),_vm._v(\\\" axis\\\"),_c('span',{staticClass:\\\"token punctuation\\\"},[_vm._v(\\\":\\\")]),_vm._v(\\\" \\\"),_c('span',{staticClass:\\\"token string\\\"},[_vm._v(\\\"'x'\\\")]),_vm._v(\\\" \\\"),_c('span',{staticClass:\\\"token punctuation\\\"},[_vm._v(\\\"}\\\")]),_vm._v(\\\"\\\\n\\\"),_c('span',{staticClass:\\\"token keyword\\\"},[_vm._v(\\\"const\\\")]),_vm._v(\\\" resize \\\"),_c('span',{staticClass:\\\"token operator\\\"},[_vm._v(\\\"=\\\")]),_vm._v(\\\" \\\"),_c('span',{staticClass:\\\"token punctuation\\\"},[_vm._v(\\\"{\\\")]),_vm._v(\\\"\\\\n  name\\\"),_c('span',{staticClass:\\\"token punctuation\\\"},[_vm._v(\\\":\\\")]),_vm._v(\\\" resize\\\"),_c('span',{staticClass:\\\"token punctuation\\\"},[_vm._v(\\\",\\\")]),_vm._v(\\\"\\\\n  edges\\\"),_c('span',{staticClass:\\\"token punctuation\\\"},[_vm._v(\\\":\\\")]),_vm._v(\\\" \\\"),_c('span',{staticClass:\\\"token punctuation\\\"},[_vm._v(\\\"{\\\")]),_vm._v(\\\" left\\\"),_c('span',{staticClass:\\\"token punctuation\\\"},[_vm._v(\\\":\\\")]),_vm._v(\\\" \\\"),_c('span',{staticClass:\\\"token boolean\\\"},[_vm._v(\\\"true\\\")]),_c('span',{staticClass:\\\"token punctuation\\\"},[_vm._v(\\\",\\\")]),_vm._v(\\\" bottom\\\"),_c('span',{staticClass:\\\"token punctuation\\\"},[_vm._v(\\\":\\\")]),_vm._v(\\\" \\\"),_c('span',{staticClass:\\\"token boolean\\\"},[_vm._v(\\\"true\\\")]),_vm._v(\\\" \\\"),_c('span',{staticClass:\\\"token punctuation\\\"},[_vm._v(\\\"}\\\")]),_vm._v(\\\"\\\\n\\\"),_c('span',{staticClass:\\\"token punctuation\\\"},[_vm._v(\\\"}\\\")]),_vm._v(\\\"\\\\n\\\\ninteractable\\\"),_c('span',{staticClass:\\\"token punctuation\\\"},[_vm._v(\\\".\\\")]),_c('span',{staticClass:\\\"token function\\\"},[_vm._v(\\\"reflow\\\")]),_c('span',{staticClass:\\\"token punctuation\\\"},[_vm._v(\\\"(\\\")]),_vm._v(\\\"drag\\\"),_c('span',{staticClass:\\\"token punctuation\\\"},[_vm._v(\\\")\\\")]),_vm._v(\\\"\\\\ninteractable\\\"),_c('span',{staticClass:\\\"token punctuation\\\"},[_vm._v(\\\".\\\")]),_c('span',{staticClass:\\\"token function\\\"},[_vm._v(\\\"reflow\\\")]),_c('span',{staticClass:\\\"token punctuation\\\"},[_vm._v(\\\"(\\\")]),_vm._v(\\\"resize\\\"),_c('span',{staticClass:\\\"token punctuation\\\"},[_vm._v(\\\")\\\")]),_vm._v(\\\"\\\\n\\\")])]),_vm._v(\\\" \\\"),_c('p',[_vm._v(\\\"The reflow method lets you trigger an action start -> move -> end sequence which\\\\nruns modifiers and does drop calculations, etc. If your interactable target is a\\\\nCSS selector, an interaction will be run for each matching element. If the\\\\nelements have inertia, \\\"),_c('code',{pre:true},[_vm._v(\\\"endOnly\\\")]),_vm._v(\\\" modifiers and \\\"),_c('code',{pre:true},[_vm._v(\\\"smoothEndDuration\\\")]),_vm._v(\\\", then the\\\\ninteractions may be run asyncroously. The reflow method returns a \\\"),_c('code',{pre:true},[_vm._v(\\\"Promise\\\")]),_vm._v(\\\"\\\\nwhich is resolved when all interactions are complete.\\\")])]) }]\",\n        component: {\n          data: function () {\n            return {\n              templateRender: null\n            }\n          },\n          render: function (createElement) {\n            return this.templateRender ? this.templateRender() : createElement(\"div\", \"Rendering\");\n          },\n          created: function () {\n            this.templateRender = function render() { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0) };\n            this.$options.staticRenderFns = [function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"frontmatter-markdown\"},[_c('h1',{staticClass:\"title is-2\",attrs:{\"id\":\"reflow\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#reflow\",\"aria-hidden\":\"true\"}}),_vm._v(\" Reflow\")]),_vm._v(\" \"),_c('pre',[_c('code',{staticClass:\"language-js\"},[_c('span',{staticClass:\"token keyword\"},[_vm._v(\"const\")]),_vm._v(\" interactable \"),_c('span',{staticClass:\"token operator\"},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{staticClass:\"token function\"},[_vm._v(\"interact\")]),_c('span',{staticClass:\"token punctuation\"},[_vm._v(\"(\")]),_vm._v(\"target\"),_c('span',{staticClass:\"token punctuation\"},[_vm._v(\")\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"token keyword\"},[_vm._v(\"const\")]),_vm._v(\" drag \"),_c('span',{staticClass:\"token operator\"},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{staticClass:\"token punctuation\"},[_vm._v(\"{\")]),_vm._v(\" name\"),_c('span',{staticClass:\"token punctuation\"},[_vm._v(\":\")]),_vm._v(\" drag\"),_c('span',{staticClass:\"token punctuation\"},[_vm._v(\",\")]),_vm._v(\" axis\"),_c('span',{staticClass:\"token punctuation\"},[_vm._v(\":\")]),_vm._v(\" \"),_c('span',{staticClass:\"token string\"},[_vm._v(\"'x'\")]),_vm._v(\" \"),_c('span',{staticClass:\"token punctuation\"},[_vm._v(\"}\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"token keyword\"},[_vm._v(\"const\")]),_vm._v(\" resize \"),_c('span',{staticClass:\"token operator\"},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{staticClass:\"token punctuation\"},[_vm._v(\"{\")]),_vm._v(\"\\n  name\"),_c('span',{staticClass:\"token punctuation\"},[_vm._v(\":\")]),_vm._v(\" resize\"),_c('span',{staticClass:\"token punctuation\"},[_vm._v(\",\")]),_vm._v(\"\\n  edges\"),_c('span',{staticClass:\"token punctuation\"},[_vm._v(\":\")]),_vm._v(\" \"),_c('span',{staticClass:\"token punctuation\"},[_vm._v(\"{\")]),_vm._v(\" left\"),_c('span',{staticClass:\"token punctuation\"},[_vm._v(\":\")]),_vm._v(\" \"),_c('span',{staticClass:\"token boolean\"},[_vm._v(\"true\")]),_c('span',{staticClass:\"token punctuation\"},[_vm._v(\",\")]),_vm._v(\" bottom\"),_c('span',{staticClass:\"token punctuation\"},[_vm._v(\":\")]),_vm._v(\" \"),_c('span',{staticClass:\"token boolean\"},[_vm._v(\"true\")]),_vm._v(\" \"),_c('span',{staticClass:\"token punctuation\"},[_vm._v(\"}\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"token punctuation\"},[_vm._v(\"}\")]),_vm._v(\"\\n\\ninteractable\"),_c('span',{staticClass:\"token punctuation\"},[_vm._v(\".\")]),_c('span',{staticClass:\"token function\"},[_vm._v(\"reflow\")]),_c('span',{staticClass:\"token punctuation\"},[_vm._v(\"(\")]),_vm._v(\"drag\"),_c('span',{staticClass:\"token punctuation\"},[_vm._v(\")\")]),_vm._v(\"\\ninteractable\"),_c('span',{staticClass:\"token punctuation\"},[_vm._v(\".\")]),_c('span',{staticClass:\"token function\"},[_vm._v(\"reflow\")]),_c('span',{staticClass:\"token punctuation\"},[_vm._v(\"(\")]),_vm._v(\"resize\"),_c('span',{staticClass:\"token punctuation\"},[_vm._v(\")\")]),_vm._v(\"\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"The reflow method lets you trigger an action start -> move -> end sequence which\\nruns modifiers and does drop calculations, etc. If your interactable target is a\\nCSS selector, an interaction will be run for each matching element. If the\\nelements have inertia, \"),_c('code',{pre:true},[_vm._v(\"endOnly\")]),_vm._v(\" modifiers and \"),_c('code',{pre:true},[_vm._v(\"smoothEndDuration\")]),_vm._v(\", then the\\ninteractions may be run asyncroously. The reflow method returns a \"),_c('code',{pre:true},[_vm._v(\"Promise\")]),_vm._v(\"\\nwhich is resolved when all interactions are complete.\")])]) }];\n          }\n        }\n      }\n     }"],"sourceRoot":""}