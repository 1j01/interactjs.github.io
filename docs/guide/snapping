

<!doctype html>
<html lang="en" prefix="og: http://ogp.me/ns#">
  <head>
    <meta charset="utf-8">
    <meta content="IE=edge,chrome=1" http-equiv="X-UA-Compatible">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
    <meta name="author" content="Taye Adeyemi" />
    <title>interact.js API Documentation</title>

    <link href="/images/ijs-gray-blue-64.png" rel="icon" type="image/png" />

    <!-- Twitter Cards -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:site:id" content="2238211567" />
    <meta name="twitter:creator:id" content="1173430910" />

    <!-- Open Graph -->
    <meta property="og:title" content="interact.js API Documentation" />
    <meta property="og:type" content="website" />
    <meta property="og:image" content="http://interactjs.io/images/screenshot_half_size.png" />
    <meta property="og:description" name="description"
      content="interact.js is a standalone javascript module for handling
               single-pointer and multi-touch drags and gestures with powerful
               options such as inertia and snapping" />

    <link href="/stylesheets/slate_screen.css" rel="stylesheet" media="screen" />
    <link href="/stylesheets/slate_print.css" rel="stylesheet" media="print" />
    <link href="/stylesheets/syntax.css" rel="stylesheet" media="screen" />

    <link href="/stylesheets/adv.css" rel="stylesheet" media="all" />
    <link href="/stylesheets/docs.css" rel="stylesheet" media="all" />

    <script src="/javascripts/slate/index.bundle.js"></script>

  </head>

  <body class="docs docs_guide docs_guide_snapping">
    <a href="#" id="nav-button">
      <span>
        NAV
        <img src="/images/navbar.png" alt="Navbar" />
      </span>
    </a>
    <div class="tocify-wrapper">
<a href="/">        <img src="/images/ijs.svg" class="logo" alt="interact.js" title="Homepage" />
</a>
      <div class="has-text-centered">
        <a class="tags has-addons is-inline-flex" href="https://www.npmjs.com/package/interactjs/v/1.4.0-rc.13">
  <span class="tag is-light">version</span>
  <span class="tag is-warning">
    1.4.0-rc.13
  </span>
</a>

      </div>

        <div class="search">
          <input type="text" class="search" id="input-search" placeholder="Search">
        </div>
        <ul class="search-results"></ul>

      <div id="toc">
      </div>

      <br class="is-hidden-tablet">

      <nav class="navbar is-hidden-tablet" role="navigation" aria-label="navigation">
        <div class="navbar-end">
            <div class="navbar-item is-paddingless has-dropdown is-hoverable">


    <div class="navbar-link">
      <img src="/images/doc.svg" class="is-hidden-mobile white-icon" alt="Guide" />

      Guide
    </div>

    <div class="navbar-dropdown" aria-label="dropdown">
      <a href="/docs/" class="navbar-item">
        Intro
      </a>
      <a href="/docs/draggable" class="navbar-item">
        Draggable
      </a>
      <a href="/docs/resizable" class="navbar-item">
        resizable
      </a>
      <a href="/docs/gesturable" class="navbar-item">
        Gesturable
      </a>
      <a href="/docs/dropzone" class="navbar-item">
        Dropzone
      </a>
      <a href="/docs/action_options" class="navbar-item">
        Action Options
      </a>
      <a href="/docs/events" class="navbar-item">
        Events
      </a>
      <a href="/docs/modifiers" class="navbar-item">
        Modifiers
      </a>
      <a href="/docs/snapping" class="navbar-item">
        Snapping
      </a>
      <a href="/docs/restriction" class="navbar-item">
        Restriction
      </a>
      <a href="/docs/inertia" class="navbar-item">
        Inertia
      </a>
      <a href="/docs/reflow" class="navbar-item">
        Reflow
      </a>
      <a href="/docs/faq" class="navbar-item">
        FAQ
      </a>
      <a href="/api" class="navbar-item">
        API
      </a>
    </div>


</div>
  <div class="navbar-item is-paddingless">

  <a href="https://github.com/taye/interact.js" class="navbar-link is-arrowless">
      <img src="/images/code.svg" class="is-hidden-mobile white-icon" alt="Code" />

    &nbsp;Source
  </a>

</div>
  <div class="navbar-item is-paddingless">

  <a href="https://gitter.im/taye/interact.js" class="navbar-link is-arrowless">
      <img src="/images/chat.svg" class="is-hidden-mobile white-icon" alt="Gitter" />

    Chat
  </a>

</div>
  <div class="navbar-item is-paddingless">

  <a href="https://twitter.com/interactjs" class="navbar-link is-arrowless">
      <img src="/images/bird.svg" class="is-hidden-mobile white-icon" alt="Bird" />

    @interactjs
  </a>

</div>

        </div>
      </nav>

        <ul class="toc-footer">
            <li><a href='http://github.com/tripit/slate'>(Docs Powered by Slate)</a></li>
        </ul>

    </div>
    <div class="page-wrapper">
        <nav class="navbar is-dark is-hidden-mobile" role="navigation" aria-label="navigation">
          <div class="navbar-end is-flex">
            <div class="navbar-item is-paddingless has-dropdown is-hoverable is-mobile">


    <div class="navbar-link">
      <img src="/images/doc.svg" class="is-hidden-mobile white-icon" alt="Guide" />

      Guide
    </div>

    <div class="navbar-dropdown" aria-label="dropdown">
      <a href="/docs/" class="navbar-item">
        Intro
      </a>
      <a href="/docs/draggable" class="navbar-item">
        Draggable
      </a>
      <a href="/docs/resizable" class="navbar-item">
        resizable
      </a>
      <a href="/docs/gesturable" class="navbar-item">
        Gesturable
      </a>
      <a href="/docs/dropzone" class="navbar-item">
        Dropzone
      </a>
      <a href="/docs/action_options" class="navbar-item">
        Action Options
      </a>
      <a href="/docs/events" class="navbar-item">
        Events
      </a>
      <a href="/docs/modifiers" class="navbar-item">
        Modifiers
      </a>
      <a href="/docs/snapping" class="navbar-item">
        Snapping
      </a>
      <a href="/docs/restriction" class="navbar-item">
        Restriction
      </a>
      <a href="/docs/inertia" class="navbar-item">
        Inertia
      </a>
      <a href="/docs/reflow" class="navbar-item">
        Reflow
      </a>
      <a href="/docs/faq" class="navbar-item">
        FAQ
      </a>
      <a href="/api" class="navbar-item">
        API
      </a>
    </div>


</div>
  <div class="navbar-item is-paddingless is-mobile">

  <a href="https://github.com/taye/interact.js" class="navbar-link is-arrowless">
      <img src="/images/code.svg" class="is-hidden-mobile white-icon" alt="Code" />

    &nbsp;Source
  </a>

</div>
  <div class="navbar-item is-paddingless is-mobile">

  <a href="https://gitter.im/taye/interact.js" class="navbar-link is-arrowless">
      <img src="/images/chat.svg" class="is-hidden-mobile white-icon" alt="Gitter" />

    Chat
  </a>

</div>
  <div class="navbar-item is-paddingless is-mobile">

  <a href="https://twitter.com/interactjs" class="navbar-link is-arrowless">
      <img src="/images/bird.svg" class="is-hidden-mobile white-icon" alt="Bird" />

    @interactjs
  </a>

</div>

          </div>
        </nav>

      <div class="dark-box">

        <div class="ad-wrap">
          <div id="ad-contain">
            <script async type="text/javascript" src="//cdn.carbonads.com/carbon.js?serve=CKYIK2J7&placement=interactjsio" id="_carbonads_js"></script>
          </div>
        </div>

      </div>

      <main class="docs-content">
        <h1 id='snapping'>Snapping</h1>
<p>interact.js has 3 snap modifiers:</p>

<ul>
<li>pointer coordinate-based <code class="prettyprint">snap</code> which is best suited to drag actions,</li>
<li><code class="prettyprint">snapSize</code> which works only on resize actions and let&rsquo;s you set targets for
the size of the target elemnt,</li>
<li>and <code class="prettyprint">snapEdges</code> which is similar to <code class="prettyprint">snapSize</code>, but let&rsquo;s you set the target
positions of the edges of the target element.</li>
</ul>

<p>When creating snap modifiers the options have an array of <code class="prettyprint">targets</code>. The action
events will be snapped to the closest target of this array which is within
range.</p>
<h1 id='code-classprettyprintinteract-modifiers-snapcode'><code class="prettyprint">interact.modifiers.snap()</code></h1>
<p>The <code class="prettyprint">snap</code> modifier changes the pointer coordinates to specified targets when
they are within range.</p>
<div class="highlight"><pre class="highlight javascript"><code><span class="kd">const</span> <span class="nx">mySnap</span> <span class="o">=</span> <span class="nx">interact</span><span class="p">.</span><span class="nx">modifiers</span><span class="p">.</span><span class="nx">snap</span><span class="p">({</span>
  <span class="na">targets</span><span class="p">:</span> <span class="p">[</span>
    <span class="p">{</span> <span class="na">x</span><span class="p">:</span> <span class="mi">200</span><span class="p">,</span> <span class="na">y</span><span class="p">:</span> <span class="mi">200</span> <span class="p">},</span>
    <span class="p">{</span> <span class="na">x</span><span class="p">:</span> <span class="mi">250</span><span class="p">,</span> <span class="na">y</span><span class="p">:</span> <span class="mi">350</span> <span class="p">}</span>
  <span class="p">]</span>
<span class="p">})</span>
</code></pre></div>
<p>Using the <code class="prettyprint">snap</code> modifier while dragging, The coordinates of the pointer that
the drag event listeners receive will be modified to meet the coordinates of the
snap targets. This option may also be used with resizable targets, but may not
yield intuitive results.</p>

<p><code class="prettyprint">snap</code> targets have <code class="prettyprint">x</code> and <code class="prettyprint">y</code> number props and an optional <code class="prettyprint">range</code> number
property.</p>
<h2 id='code-classprettyprintrelativepointscode'><code class="prettyprint">relativePoints</code></h2><div class="highlight"><pre class="highlight javascript"><code><span class="nx">interact</span><span class="p">(</span><span class="nx">element</span><span class="p">).</span><span class="nx">draggable</span><span class="p">({</span>
  <span class="na">modifiers</span><span class="p">:</span> <span class="p">[</span>
    <span class="nx">interact</span><span class="p">.</span><span class="nx">modifiers</span><span class="p">.</span><span class="nx">snap</span><span class="p">({</span>
      <span class="na">targets</span><span class="p">:</span> <span class="p">[</span> <span class="p">{</span> <span class="na">x</span><span class="p">:</span> <span class="mi">300</span><span class="p">,</span> <span class="na">y</span><span class="p">:</span> <span class="mi">300</span> <span class="p">}</span> <span class="p">],</span>
      <span class="na">relativePoints</span><span class="p">:</span> <span class="p">[</span>
        <span class="p">{</span> <span class="na">x</span><span class="p">:</span> <span class="mi">0</span>  <span class="p">,</span> <span class="na">y</span><span class="p">:</span> <span class="mi">0</span>   <span class="p">},</span>   <span class="c1">// snap relative to the element's top-left,</span>
        <span class="p">{</span> <span class="na">x</span><span class="p">:</span> <span class="mf">0.5</span><span class="p">,</span> <span class="na">y</span><span class="p">:</span> <span class="mf">0.5</span> <span class="p">},</span>   <span class="c1">// to the center</span>
        <span class="p">{</span> <span class="na">x</span><span class="p">:</span> <span class="mi">1</span>  <span class="p">,</span> <span class="na">y</span><span class="p">:</span> <span class="mi">1</span>   <span class="p">}</span>    <span class="c1">// and to the bottom-right</span>
      <span class="p">]</span>
    <span class="p">})</span>
  <span class="p">]</span>
<span class="p">})</span>
</code></pre></div>
<p>If you want to specify for <code class="prettyprint">snap</code> (not <code class="prettyprint">snapSize</code> or <code class="prettyprint">snapEdges</code>) the points on
the element which snapping should be relative to, then use an array of
<code class="prettyprint">relativePoints</code>. Each item in the array should be an object with <code class="prettyprint">x</code> and <code class="prettyprint">y</code>
properties which are scalars specifying the position on the element to which
snapping should be relative. If no <code class="prettyprint">relativePoints</code> array is specified or the
array is empty then snapping is relative to the pointer coordinates (default).</p>

<p>There are effectively <code class="prettyprint">targets.length * max( relativePoints.length, 1 )</code> snap
targets while snap calculations are done. Snap functions are called multiple
times with the coordinates at each <code class="prettyprint">relativePoint</code>.</p>
<h2 id='code-classprettyprintoffsetcode'><code class="prettyprint">offset</code></h2><div class="highlight"><pre class="highlight javascript"><code><span class="nx">interact</span><span class="p">(</span><span class="nx">element1</span><span class="p">).</span><span class="nx">draggable</span><span class="p">({</span>
  <span class="na">modifiers</span><span class="p">:</span> <span class="p">[</span>
    <span class="nx">interact</span><span class="p">.</span><span class="nx">modifiers</span><span class="p">.</span><span class="nx">snap</span><span class="p">({</span>
      <span class="na">targets</span><span class="p">:</span> <span class="p">[</span> <span class="p">{</span> <span class="na">x</span><span class="p">:</span> <span class="mi">300</span><span class="p">,</span> <span class="na">y</span><span class="p">:</span> <span class="mi">300</span> <span class="p">}</span> <span class="p">],</span>
      <span class="na">offset</span><span class="p">:</span> <span class="p">{</span> <span class="na">x</span><span class="p">:</span> <span class="mi">20</span><span class="p">,</span> <span class="na">y</span><span class="p">:</span> <span class="mi">20</span> <span class="p">}</span>
    <span class="p">})</span>
  <span class="p">]</span>
<span class="p">})</span>

<span class="nx">interact</span><span class="p">(</span><span class="nx">element2</span><span class="p">).</span><span class="nx">resizable</span><span class="p">({</span>
  <span class="na">modifiers</span><span class="p">:</span> <span class="p">[</span>
    <span class="nx">interact</span><span class="p">.</span><span class="nx">modifiers</span><span class="p">.</span><span class="nx">snap</span><span class="p">({</span>
      <span class="na">targets</span><span class="p">:</span> <span class="p">[</span> <span class="p">{</span> <span class="na">x</span><span class="p">:</span> <span class="mi">300</span><span class="p">,</span> <span class="na">y</span><span class="p">:</span> <span class="mi">300</span> <span class="p">}</span> <span class="p">],</span>
      <span class="na">offset</span><span class="p">:</span> <span class="s1">'startCoords'</span>
    <span class="p">})</span>
  <span class="p">]</span>
<span class="p">})</span>
</code></pre></div>
<p>The <code class="prettyprint">offset</code> option lets you shift the coordinates of the targets of a <code class="prettyprint">snap</code>
modifier. The value may be:</p>

<ul>
<li>an object with <code class="prettyprint">x</code> and <code class="prettyprint">y</code> properties,</li>
<li>&lsquo;startCoords&rsquo;<code class="prettyprint">which will then use the</code>pageX<code class="prettyprint">and</code>pageY` at the start of
the action,</li>
<li><code class="prettyprint">&#39;self&#39;</code> which will use the target element&rsquo;s top-left coordinates,</li>
<li>or <code class="prettyprint">&#39;parent&#39;</code> which will use the top-left coordinates of the target&rsquo;s parent
element</li>
</ul>
<h1 id='code-classprettyprintinteract-modifiers-snapsizecode'><code class="prettyprint">interact.modifiers.snapSize()</code></h1><div class="highlight"><pre class="highlight javascript"><code><span class="nx">interact</span><span class="p">(</span><span class="nx">target</span><span class="p">).</span><span class="nx">resizable</span><span class="p">({</span>
  <span class="na">edges</span><span class="p">:</span> <span class="p">{</span> <span class="na">top</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span> <span class="na">left</span><span class="p">:</span> <span class="kc">true</span> <span class="p">},</span>
  <span class="na">modifiers</span><span class="p">:</span> <span class="p">[</span>
    <span class="nx">interact</span><span class="p">.</span><span class="nx">modifiers</span><span class="p">.</span><span class="nx">snapSize</span><span class="p">({</span>
      <span class="na">targets</span><span class="p">:</span> <span class="p">[</span>
        <span class="p">{</span> <span class="na">width</span><span class="p">:</span> <span class="mi">100</span> <span class="p">},</span>
        <span class="nx">interact</span><span class="p">.</span><span class="nx">createSnapGrid</span><span class="p">({</span> <span class="na">width</span><span class="p">:</span> <span class="mi">100</span><span class="p">,</span> <span class="na">height</span><span class="p">:</span> <span class="mi">100</span> <span class="p">})</span>
      <span class="p">]</span>
    <span class="p">})</span>
  <span class="p">]</span>
<span class="p">})</span>
</code></pre></div>
<p>The <code class="prettyprint">snapSize</code> modifier snaps the <em>dimensions</em> of targets when resizing. A
<code class="prettyprint">snapSize</code> target is an object with <code class="prettyprint">x</code> and <code class="prettyprint">y</code> number props <em>or</em> <code class="prettyprint">width</code> and
<code class="prettyprint">height</code> number props as well as an optional <code class="prettyprint">range</code>.  Its targets have <code class="prettyprint">x</code> and
<code class="prettyprint">y</code> number props <em>or</em> <code class="prettyprint">width</code> and <code class="prettyprint">height</code> number props as well as an optional
<code class="prettyprint">range</code>.</p>
<h1 id='code-classprettyprintinteract-modifiers-snapedgescode'><code class="prettyprint">interact.modifiers.snapEdges()</code></h1><div class="highlight"><pre class="highlight javascript"><code><span class="nx">interact</span><span class="p">(</span><span class="nx">target</span><span class="p">).</span><span class="nx">resizable</span><span class="p">({</span>
  <span class="na">edges</span><span class="p">:</span> <span class="p">{</span> <span class="na">top</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span> <span class="na">left</span><span class="p">:</span> <span class="kc">true</span> <span class="p">},</span>
  <span class="na">modifiers</span><span class="p">:</span> <span class="p">[</span>
    <span class="nx">interact</span><span class="p">.</span><span class="nx">modifiers</span><span class="p">.</span><span class="nx">snapEdges</span><span class="p">({</span>
      <span class="na">targets</span><span class="p">:</span> <span class="p">[</span>
        <span class="nx">interact</span><span class="p">.</span><span class="nx">createSnapGrid</span><span class="p">({</span> <span class="na">top</span><span class="p">:</span> <span class="mi">100</span><span class="p">,</span> <span class="na">left</span><span class="p">:</span> <span class="mi">100</span> <span class="p">})</span>
      <span class="p">]</span>
    <span class="p">})</span>
  <span class="p">]</span>
<span class="p">})</span>
</code></pre></div>
<p>The <code class="prettyprint">snapSize</code> modifier snaps the <em>edges</em> of targets when resizing.  Its targets
have eitehr <code class="prettyprint">x</code> and <code class="prettyprint">y</code> number props to snap the left/right and top/bottom edges
respectively, <code class="prettyprint">top</code>, <code class="prettyprint">left</code>, <code class="prettyprint">width</code> and <code class="prettyprint">height</code> number props to snap each edge
and an optional <code class="prettyprint">range</code>.</p>
<h2 id='code-classprettyprinttargetscode-option'><code class="prettyprint">targets</code> option</h2>
<p>The coordates of action events are compared to the targets of the provided snap
modifiers. If multiple targets are within range, the closest target is used.</p>
<div class="highlight"><pre class="highlight javascript"><code><span class="nx">interact</span><span class="p">.</span><span class="nx">modifiers</span><span class="p">.</span><span class="nx">snap</span><span class="p">({</span>
  <span class="na">targets</span><span class="p">:</span> <span class="p">[</span>
    <span class="kd">function</span> <span class="p">(</span>
      <span class="c1">// the x and y page coordinates,</span>
      <span class="nx">x</span><span class="p">,</span> <span class="nx">y</span><span class="p">,</span>
      <span class="c1">// the current interaction</span>
      <span class="nx">interaction</span><span class="p">,</span>
      <span class="c1">// the offset information with relativePoint if set</span>
      <span class="p">{</span> <span class="na">x</span><span class="p">:</span> <span class="nx">offsetX</span><span class="p">,</span> <span class="na">y</span><span class="p">:</span> <span class="nx">offsetY</span><span class="p">,</span> <span class="nx">relativePoint</span><span class="p">,</span> <span class="na">index</span><span class="p">:</span> <span class="nx">relativePointIndex</span> <span class="p">},</span>
      <span class="c1">// the index of this function in the options.targets array</span>
      <span class="nx">index</span><span class="p">)</span> <span class="p">{</span>
      <span class="k">return</span> <span class="p">{</span>
        <span class="na">x</span><span class="p">:</span> <span class="nx">x</span><span class="p">,</span>
        <span class="na">y</span><span class="p">:</span> <span class="p">(</span><span class="mi">75</span> <span class="o">+</span> <span class="mi">50</span> <span class="o">*</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">sin</span><span class="p">(</span><span class="nx">x</span> <span class="o">*</span> <span class="mf">0.04</span><span class="p">)),</span>
        <span class="na">range</span><span class="p">:</span> <span class="mi">40</span><span class="p">,</span>
      <span class="p">}</span>
    <span class="p">}</span>
  <span class="p">]</span>
<span class="p">})</span>
</code></pre></div>
<p>You can use functions in the <code class="prettyprint">targets</code> array. If a snap target is a function,
then it is called and given the <code class="prettyprint">x</code> and <code class="prettyprint">y</code> coordinates of the event as the
first two parameters and the interaction as the third parameter.  The return
value of the function is used as a target.</p>

<p>If a target omits an axis or edge prop, then the corresponding axis will not be
changed. For example, if a target is defined as <code class="prettyprint">{ y: 100, range Infinity }</code>
then the snapped movement will be horizontal at <code class="prettyprint">(100, pointerEventPageX)</code>.</p>
<h2 id='snap-grids'>Snap grids</h2><div class="highlight"><pre class="highlight javascript"><code><span class="kd">var</span> <span class="nx">gridTarget</span> <span class="o">=</span> <span class="nx">interact</span><span class="p">.</span><span class="nx">createSnapGrid</span><span class="p">({</span>
  <span class="na">x</span><span class="p">:</span> <span class="mi">50</span><span class="p">,</span>
  <span class="na">y</span><span class="p">:</span> <span class="mi">50</span><span class="p">,</span>
  <span class="na">range</span><span class="p">:</span> <span class="mi">10</span><span class="p">,</span>
  <span class="na">offset</span><span class="p">:</span> <span class="p">{</span> <span class="na">x</span><span class="p">:</span> <span class="mi">5</span><span class="p">,</span> <span class="na">y</span><span class="p">:</span> <span class="mi">10</span> <span class="p">}</span>
<span class="p">})</span>

<span class="nx">interact</span><span class="p">(</span><span class="nx">element</span><span class="p">).</span><span class="nx">draggable</span><span class="p">({</span>
  <span class="na">modifiers</span><span class="p">:</span> <span class="p">[</span>
    <span class="nx">interact</span><span class="p">.</span><span class="nx">modifiers</span><span class="p">.</span><span class="nx">snap</span><span class="p">({</span> <span class="na">targets</span><span class="p">:</span> <span class="p">[</span><span class="nx">gridTarget</span><span class="p">]</span> <span class="p">})</span>
  <span class="p">]</span>
<span class="p">})</span>
</code></pre></div>
<p>You can use the <code class="prettyprint">interact.createSnapGrid()</code> method to create a target that snaps
to a grid. The method takes an object describing a grid and returns a function
that snaps to the corners of that grid.</p>

<p>The properties of the grid are:</p>

<ul>
<li><code class="prettyprint">x</code>, <code class="prettyprint">y</code>: the spacing between the horizontal and vertical grid lines.</li>
<li><code class="prettyprint">range</code> (optional): the distance from the grid corners within which the
pointer coords will be snapped.</li>
<li><code class="prettyprint">offset</code> (optional): an object with <code class="prettyprint">x</code> and <code class="prettyprint">y</code> props to offset the grid
lines</li>
<li><code class="prettyprint">limit</code> (optional): an object with <code class="prettyprint">top</code>, <code class="prettyprint">left</code>, <code class="prettyprint">width</code> and <code class="prettyprint">height</code> props
to set the bounds of the grid</li>
</ul>
<h2 id='code-classprettyprintrangecode'><code class="prettyprint">range</code></h2><div class="highlight"><pre class="highlight javascript"><code><span class="nx">interact</span><span class="p">(</span><span class="nx">element</span><span class="p">).</span><span class="nx">draggable</span><span class="p">({</span>
  <span class="na">modifiers</span><span class="p">:</span> <span class="p">[</span>
    <span class="nx">interact</span><span class="p">.</span><span class="nx">modifiers</span><span class="p">.</span><span class="nx">snap</span><span class="p">({</span>
      <span class="na">targets</span><span class="p">:</span> <span class="p">[</span>
        <span class="p">{</span> <span class="na">x</span><span class="p">:</span> <span class="mi">20</span><span class="p">,</span> <span class="na">y</span><span class="p">:</span> <span class="mi">450</span><span class="p">,</span> <span class="na">range</span><span class="p">:</span> <span class="mi">50</span> <span class="p">}</span>
        <span class="p">{</span> <span class="nl">x</span><span class="p">:</span> <span class="mi">10</span><span class="p">,</span> <span class="na">y</span><span class="p">:</span> <span class="mi">0</span> <span class="cm">/* use default range below */</span><span class="p">}</span>
      <span class="p">],</span>
      <span class="na">range</span><span class="p">:</span> <span class="mi">300</span> <span class="c1">// for targets that don't specify a range</span>
    <span class="p">})</span>
  <span class="p">]</span>
<span class="p">})</span>
</code></pre></div>
<p>A range can be specified in the snap modifier options and each target may
optionally have its own range. The <code class="prettyprint">range</code> of a snap target is the distance the
pointer must be from the target&rsquo;s coordinates for a snap to be possible.</p>

<p>i.e. <code class="prettyprint">inRange = distance &lt;= range</code>.</p>


        <div class="ad-padding"></div>

      </main>
    </div>

    <script>
      if (!/yes|1/.test(navigator.doNotTrack) || /MSIE|Trident/i.test(navigator.userAgent)) {
      (function(p,r,i,v,a,c,y){p['GoogleAnalyticsObject']=a;p[a]=p[a]||function(){
      (p[a].q=p[a].q||[]).push(arguments)},p[a].l=1*new Date();c=r.createElement(i),
      y=r.getElementsByTagName(i)[0];c.async=1;c.src=v;y.parentNode.insertBefore(c,y)
      })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
      ga('create', 'UA-44445883-3', 'interactjs.io');

      window.addEventListener('DOMContentLoaded', function () {
        var heading = document.getElementById(window.location.hash),
            title = heading && heading.textContent;

        if (title) {
          ga('send', {
            hitType: 'pageview',
            page: '/docs/' + window.location.hash,
            title: 'Docs: ' + title
          });
        }
        else {
          ga('send', 'pageview');
        }
      });
    }
    </script>

  </body>
</html>
